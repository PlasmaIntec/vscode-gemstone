{"version":3,"sources":["../webpack/bootstrap","../external \"assert\"",".././node_modules/ref-napi/lib/ref.js",".././node_modules/ffi-napi/node_modules/debug/src/index.js",".././node_modules/ffi-napi/lib/bindings.js","../external \"vscode\"","../external \"util\"",".././node_modules/ffi-napi/lib/foreign_function.js","../external \"path\"",".././node_modules/ffi-napi/lib/type.js",".././node_modules/ms/index.js","../external \"tty\"",".././node_modules/supports-color/index.js",".././node_modules/ffi-napi/lib/cif.js",".././node_modules/ffi-napi/lib/dynamic_library.js",".././node_modules/ref-napi/node_modules/debug/src/common.js","../external \"os\"",".././node_modules/bindings/bindings.js","../external \"fs\"",".././node_modules/ffi-napi/node_modules/debug/src/common.js",".././node_modules/ref-struct-di/lib/struct.js",".././node_modules/ref-struct-di/node_modules/debug/src/common.js",".././node_modules/ffi-napi/lib/cif_var.js",".././node_modules/ffi-napi/lib/callback.js",".././node_modules/ffi-napi/lib/_foreign_function.js",".././node_modules/ffi-napi/lib/foreign_function_var.js",".././src/extension.ts",".././src/LoginProvider.ts",".././src/Login.ts",".././src/SessionProvider.ts",".././src/Session.ts",".././node_modules/gci-js/index.js",".././node_modules/gci-js/GciSession.js",".././node_modules/gci-js/GciLibrary.js",".././node_modules/ffi-napi/lib/ffi.js",".././node_modules/ref-napi/node_modules/debug/src/index.js",".././node_modules/ref-napi/node_modules/debug/src/browser.js",".././node_modules/ref-napi/node_modules/debug/src/node.js",".././node_modules/has-flag/index.js",".././node_modules/file-uri-to-path/index.js","../external \"buffer\"",".././node_modules/ffi-napi/node_modules/debug/src/browser.js",".././node_modules/ffi-napi/node_modules/debug/src/node.js",".././node_modules/ref-struct-di/node_modules/debug/src/index.js",".././node_modules/ref-struct-di/node_modules/debug/src/browser.js",".././node_modules/ref-struct-di/node_modules/debug/src/node.js",".././node_modules/ffi-napi/lib/function.js",".././node_modules/ffi-napi/lib/library.js",".././node_modules/ffi-napi/lib/errno.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","assert","inspect","debug","os","endianness","refType","type","_type","coerceType","rtn","indirection","configurable","writable","derefType","Error","getPrototypeOf","types","replace","toLowerCase","void","CString","refCount","TypeError","getType","buffer","size","length","set","offset","sizeof","pointer","reference","readPointer","writePointer","alloc","Buffer","arguments","allocCString","string","encoding","isBuffer","isNull","NULL","byteLength","writeCString","charPtrType","strictEqual","len","write","writeUInt8","readInt64","readUInt64","writeInt64","writeUInt64","opposite","int64temp","int64","uint64temp","uint64","ref","deref","kAttachedRefs","_attach","buf","obj","push","_writeObject","writeObject","_writePointer","ptr","_reinterpret","reinterpret","_reinterpretUntilZeros","reinterpretUntilZeros","val","int8","readInt8","charCodeAt","writeInt8","uint8","readUInt8","int16","uint16","int32","uint32","float","double","readObject","alignment","alignof","_buf","readCString","_get","_set","utfstringwarned","console","error","forEach","unsigned","typeName","keys","bool","char","NULL_POINTER","address","this","hexAddress","readInt64BE","writeInt64BE","readUInt64BE","writeUInt64BE","readInt64LE","writeInt64LE","readUInt64LE","writeUInt64LE","inspectSym","custom","overwriteInspect","SlowBuffer","apply","process","browser","__nwjs","CIF","_ForeignFunction","funcPtr","returnType","argTypes","abi","Array","isArray","map","cif","Struct","bindings","FFI_TYPE","Type","size_t","ushort","ffi_type_ptr_array","ret","ffi_type","FFI_TYPES","fields","fieldNames","numFields","numElements","field","ffi_type_ptr","fixedLength","elements","index","j","cur","FFI_TYPE_SIZE","h","w","y","plural","ms","msAbs","isPlural","Math","round","options","str","String","match","exec","parseFloat","parse","isFinite","long","abs","fmtLong","fmtShort","JSON","stringify","hasFlag","env","forceColor","getSupportLevel","stream","level","hasBasic","has256","has16m","translateLevel","isTTY","min","platform","osRelease","release","split","Number","versions","node","some","sign","CI_NAME","test","TEAMCITY_VERSION","COLORTERM","version","parseInt","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","supportsColor","FORCE_COLOR","stdout","stderr","POINTER_SIZE","ffi_prep_cif","FFI_CIF_SIZE","FFI_DEFAULT_ABI","FFI_OK","FFI_BAD_TYPEDEF","FFI_BAD_ABI","cifs","rtype","numArgs","_argtypesptr","_rtypeptr","ffiType","rtnTypePtr","argTypesPtr","status","err","code","errno","enabled","DEBUG","ForeignFunction","funcs","StaticFunctions","read","readFileSync","int","voidPtr","dlopen","dlclose","dlsym","dlerror","DynamicLibrary","path","FLAGS","RTLD_LAZY","_handle","k","desc","getOwnPropertyDescriptor","close","symbol","selectColor","namespace","hash","createDebug","colors","prevTime","_len","args","_key","self","curr","Date","diff","prev","coerce","unshift","format","formatter","formatters","splice","formatArgs","log","useColors","color","destroy","extend","init","instances","indexOf","delimiter","default","stack","message","disable","enable","namespaces","save","names","skips","RegExp","substr","instance","humanize","load","__filename","fs","fileURLToPath","join","dirname","exists","accessSync","e","existsSync","defaults","arrow","NODE_BINDINGS_ARROW","compiled","NODE_BINDINGS_COMPILED_DIR","arch","nodePreGyp","try","opts","module_root","getRoot","getFileName","extname","b","requireFunc","tries","resolve","a","calling_file","fileName","origPST","prepareStackTrace","origSTL","stackTraceLimit","dummy","st","captureStackTrace","file","dir","cwd","util","slice","copy","toString","_instanceCreated","equal","struct","addType","align","padding","isPacked","max","left","recalc","proto","toObject","constructor","toJSON","StructType","arg","data","store","opt","packed","Boolean","ffi_prep_cif_var","numFixedArgs","numTotalArgs","_Callback","Callback","errorReportCallback","nextTick","retType","func","undefined","argc","retval","params","argPtr","result","FFI_ARG_SIZE","argsArraySize","resultSize","proxy","argsList","argType","valPtr","ffi_call","async","callback","ffi_call_async","CIF_var","fixedArgTypes","cache","fixedKey","getId","variadic_function_generator","rtnType","rtnName","idKey","counter","vscode","LoginProvider_1","SessionProvider_1","Session_1","outputChannel","sessionId","sessions","sessionsProvider","statusBarItem","activate","context","createOutputChannel","createViewForLoginList","createViewForSessionList","createStatusBarItem","createLoginCommandHandler","createLogoutCommandHandler","createDisplayItCommandHandler","deactivate","disposable","commands","registerTextEditorCommand","textEditor","edit","window","showErrorMessage","selection","isEmpty","showInformationMessage","text","document","getText","stringFromExecuteString","editBuilder","insert","end","then","success","Selection","line","character","showWarningMessage","subscriptions","registerCommand","login","session","Session","refresh","appendLine","description","logout","StatusBarAlignment","Left","command","show","loginsProvider","LoginsProvider","registerTreeDataProvider","SessionsProvider","Login_1","[object Object]","_onDidChangeTreeData","EventEmitter","onDidChangeTreeData","event","fire","element","Promise","config","workspace","getConfiguration","logins","Login","label","library","gem_host","stone","gs_user","gs_password","netldi","host_user","host_password","TreeItem","super","TreeItemCollapsibleState","None","iconPath","light","dark","tooltip","list","filter","each","isLoggedIn","GciSession","gciSession","title","input","myString","executeFetchBytes","GciLibrary","GciErrSType","OOP_ILLEGAL","OOP_NIL","OOP_CLASS_STRING","gci","stoneNRS","gemNRS","GciTsLogin","GciTsAbort","GciTsBegin","GciTsCommit","oop","GciTsExecute_","expectedSize","actualSize","GciTsExecuteFetchBytes","classOop","GciTsFetchClass","GciTsFetchSize","GciTsFetchVaryingSize","GciTsBreak","flag","GciTsCallInProgress","objectOop","GciTsIsKindOf","GciTsLogout","receiver","selector","oopArray","writeIntLE","GciTsPerform","GciTsPerformFetchBytes","symbolList","GciTsResolveSymbol","theStringBuffer","GciTsVersion","theString","terminatingNullPos","GciTsGemTrace","FFI","Library","GciI32ToOop","GciTsCharToOop","GciTsDoubleToSmallDouble","GciTsExecute","GciTsOopIsSpecial","GciTsOopToChar","GciTsSessionIsRemote","readIntLE","shift","prop","Utf8String","ulong","Function","VariadicForeignFunction","LIB_EXT","EXT","_typeof","iterator","_console","lastC","storage","setItem","removeItem","getItem","navigator","userAgent","documentElement","style","WebkitAppearance","firebug","exception","table","$1","localStorage","localstorage","v","tty","inspectOpts","colorCode","prefix","concat","hideDate","toISOString","getDate","isatty","fd","reduce","substring","_","toUpperCase","O","argv","startsWith","pos","terminatorPos","sep","uri","rest","decodeURI","firstSlash","host","toPointer","fn","toFunction","RTLD_NOW","linux","linux2","sunos","solaris","freebsd","openbsd","darwin","mac","win32","libfile","lib","dl","fptr","info","resultType","paramTypes","fopts","varargs","ff","intPtr","errnoPtr","_errno"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","module.exports = require(\"assert\");","'use strict';\nconst assert = require('assert');\nconst inspect = require('util').inspect;\nconst debug = require('debug')('ref');\nconst os = require('os');\n\nexports = module.exports = require('bindings')('binding');\n\nexports.endianness = os.endianness();\n\n/**\n * A `Buffer` that references the C NULL pointer. That is, its memory address\n * points to 0. Its `length` is 0 because accessing any data from this buffer\n * would cause a _segmentation fault_.\n *\n * ```\n * console.log(ref.NULL);\n * <SlowBuffer@0x0 >\n * ```\n *\n * @name NULL\n * @type Buffer\n */\n\n/**\n * A string that represents the native endianness of the machine's processor.\n * The possible values are either `\"LE\"` or `\"BE\"`.\n *\n * ```\n * console.log(ref.endianness);\n * 'LE'\n * ```\n *\n * @name endianness\n * @type String\n */\n\n/**\n * Accepts a `Buffer` instance and returns the memory address of the buffer\n * instance. Returns a JavaScript Number, which can't hold 64-bit integers,\n * so this function is unsafe on 64-bit systems.\n * ```\n * console.log(ref.address(new Buffer(1)));\n * 4320233616\n *\n * console.log(ref.address(ref.NULL)));\n * 0\n * ```\n *\n * @param {Buffer} buffer The buffer to get the memory address of.\n * @return {Number} The memory address the buffer instance.\n * @name address\n * @type method\n */\n\n/**\n * Accepts a `Buffer` instance and returns _true_ if the buffer represents the\n * NULL pointer, _false_ otherwise.\n *\n * ```\n * console.log(ref.isNull(new Buffer(1)));\n * false\n *\n * console.log(ref.isNull(ref.NULL));\n * true\n * ```\n *\n * @param {Buffer} buffer The buffer to check for NULL.\n * @return {Boolean} true or false.\n * @name isNull\n * @type method\n */\n\n/**\n * Reads a JavaScript Object that has previously been written to the given\n * _buffer_ at the given _offset_.\n *\n * ```\n * var obj = { foo: 'bar' };\n * var buf = ref.alloc('Object', obj);\n *\n * var obj2 = ref.readObject(buf, 0);\n * console.log(obj === obj2);\n * true\n * ```\n *\n * @param {Buffer} buffer The buffer to read an Object from.\n * @param {Number} offset The offset to begin reading from.\n * @return {Object} The Object that was read from _buffer_.\n * @name readObject\n * @type method\n */\n\n/**\n * Reads a Buffer instance from the given _buffer_ at the given _offset_.\n * The _size_ parameter specifies the `length` of the returned Buffer instance,\n * which defaults to __0__.\n *\n * ```\n * var buf = new Buffer('hello world');\n * var pointer = ref.alloc('pointer', buf);\n *\n * var buf2 = ref.readPointer(pointer, 0, buf.length);\n * console.log(buf2.toString());\n * 'hello world'\n * ```\n *\n * @param {Buffer} buffer The buffer to read a Buffer from.\n * @param {Number} offset The offset to begin reading from.\n * @param {Number} length (optional) The length of the returned Buffer. Defaults to 0.\n * @return {Buffer} The Buffer instance that was read from _buffer_.\n * @name readPointer\n * @type method\n */\n\n/**\n * Returns a JavaScript String read from _buffer_ at the given _offset_. The\n * C String is read until the first NULL byte, which indicates the end of the\n * String.\n *\n * This function can read beyond the `length` of a Buffer.\n *\n * ```\n * var buf = new Buffer('hello\\0world\\0');\n *\n * var str = ref.readCString(buf, 0);\n * console.log(str);\n * 'hello'\n * ```\n *\n * @param {Buffer} buffer The buffer to read a Buffer from.\n * @param {Number} offset The offset to begin reading from.\n * @return {String} The String that was read from _buffer_.\n * @name readCString\n * @type method\n */\n\n/**\n * Returns a big-endian signed 64-bit int read from _buffer_ at the given\n * _offset_.\n *\n * If the returned value will fit inside a JavaScript Number without losing\n * precision, then a Number is returned, otherwise a String is returned.\n *\n * ```\n * var buf = ref.alloc('int64');\n * ref.writeInt64BE(buf, 0, '9223372036854775807');\n *\n * var val = ref.readInt64BE(buf, 0)\n * console.log(val)\n * '9223372036854775807'\n * ```\n *\n * @param {Buffer} buffer The buffer to read a Buffer from.\n * @param {Number} offset The offset to begin reading from.\n * @return {Number|String} The Number or String that was read from _buffer_.\n * @name readInt64BE\n * @type method\n */\n\n/**\n * Returns a little-endian signed 64-bit int read from _buffer_ at the given\n * _offset_.\n *\n * If the returned value will fit inside a JavaScript Number without losing\n * precision, then a Number is returned, otherwise a String is returned.\n *\n * ```\n * var buf = ref.alloc('int64');\n * ref.writeInt64LE(buf, 0, '9223372036854775807');\n *\n * var val = ref.readInt64LE(buf, 0)\n * console.log(val)\n * '9223372036854775807'\n * ```\n *\n * @param {Buffer} buffer The buffer to read a Buffer from.\n * @param {Number} offset The offset to begin reading from.\n * @return {Number|String} The Number or String that was read from _buffer_.\n * @name readInt64LE\n * @type method\n */\n\n/**\n * Returns a big-endian unsigned 64-bit int read from _buffer_ at the given\n * _offset_.\n *\n * If the returned value will fit inside a JavaScript Number without losing\n * precision, then a Number is returned, otherwise a String is returned.\n *\n * ```\n * var buf = ref.alloc('uint64');\n * ref.writeUInt64BE(buf, 0, '18446744073709551615');\n *\n * var val = ref.readUInt64BE(buf, 0)\n * console.log(val)\n * '18446744073709551615'\n * ```\n *\n * @param {Buffer} buffer The buffer to read a Buffer from.\n * @param {Number} offset The offset to begin reading from.\n * @return {Number|String} The Number or String that was read from _buffer_.\n * @name readUInt64BE\n * @type method\n */\n\n/**\n * Returns a little-endian unsigned 64-bit int read from _buffer_ at the given\n * _offset_.\n *\n * If the returned value will fit inside a JavaScript Number without losing\n * precision, then a Number is returned, otherwise a String is returned.\n *\n * ```\n * var buf = ref.alloc('uint64');\n * ref.writeUInt64LE(buf, 0, '18446744073709551615');\n *\n * var val = ref.readUInt64LE(buf, 0)\n * console.log(val)\n * '18446744073709551615'\n * ```\n *\n * @param {Buffer} buffer The buffer to read a Buffer from.\n * @param {Number} offset The offset to begin reading from.\n * @return {Number|String} The Number or String that was read from _buffer_.\n * @name readUInt64LE\n * @type method\n */\n\n/**\n * Writes the _input_ Number or String as a big-endian signed 64-bit int into\n * _buffer_ at the given _offset_.\n *\n * ```\n * var buf = ref.alloc('int64');\n * ref.writeInt64BE(buf, 0, '9223372036854775807');\n * ```\n *\n * @param {Buffer} buffer The buffer to write to.\n * @param {Number} offset The offset to begin writing from.\n * @param {Number|String} input This String or Number which gets written.\n * @name writeInt64BE\n * @type method\n */\n\n/**\n * Writes the _input_ Number or String as a little-endian signed 64-bit int into\n * _buffer_ at the given _offset_.\n *\n * ```\n * var buf = ref.alloc('int64');\n * ref.writeInt64LE(buf, 0, '9223372036854775807');\n * ```\n *\n * @param {Buffer} buffer The buffer to write to.\n * @param {Number} offset The offset to begin writing from.\n * @param {Number|String} input This String or Number which gets written.\n * @name writeInt64LE\n * @type method\n */\n\n/**\n * Writes the _input_ Number or String as a big-endian unsigned 64-bit int into\n * _buffer_ at the given _offset_.\n *\n * ```\n * var buf = ref.alloc('uint64');\n * ref.writeUInt64BE(buf, 0, '18446744073709551615');\n * ```\n *\n * @param {Buffer} buffer The buffer to write to.\n * @param {Number} offset The offset to begin writing from.\n * @param {Number|String} input This String or Number which gets written.\n * @name writeUInt64BE\n * @type method\n */\n\n/**\n * Writes the _input_ Number or String as a little-endian unsigned 64-bit int\n * into _buffer_ at the given _offset_.\n *\n * ```\n * var buf = ref.alloc('uint64');\n * ref.writeUInt64LE(buf, 0, '18446744073709551615');\n * ```\n *\n * @param {Buffer} buffer The buffer to write to.\n * @param {Number} offset The offset to begin writing from.\n * @param {Number|String} input This String or Number which gets written.\n * @name writeUInt64LE\n * @type method\n */\n\n/**\n * Returns a new clone of the given \"type\" object, with its\n * `indirection` level incremented by **1**.\n *\n * Say you wanted to create a type representing a `void *`:\n *\n * ```\n * var voidPtrType = ref.refType(ref.types.void);\n * ```\n *\n * @param {Object|String} type The \"type\" object to create a reference type from. Strings get coerced first.\n * @return {Object} The new \"type\" object with its `indirection` incremented by 1.\n */\n\nexports.refType = function refType (type) {\n  const _type = exports.coerceType(type);\n  const rtn = Object.create(_type);\n  rtn.indirection++;\n  if (_type.name) {\n    Object.defineProperty(rtn, 'name', {\n      value: _type.name + '*',\n      configurable: true,\n      enumerable: true,\n      writable: true\n    });\n  }\n  return rtn;\n}\n\n/**\n * Returns a new clone of the given \"type\" object, with its\n * `indirection` level decremented by 1.\n *\n * @param {Object|String} type The \"type\" object to create a dereference type from. Strings get coerced first.\n * @return {Object} The new \"type\" object with its `indirection` decremented by 1.\n */\n\nexports.derefType = function derefType (type) {\n  const _type = exports.coerceType(type);\n  if (_type.indirection === 1) {\n    throw new Error('Cannot create deref\\'d type for type with indirection 1');\n  }\n  let rtn = Object.getPrototypeOf(_type);\n  if (rtn.indirection !== _type.indirection - 1) {\n    // slow case\n    rtn = Object.create(_type);\n    rtn.indirection--;\n  }\n  return rtn;\n}\n\n/**\n * Coerces a \"type\" object from a String or an actual \"type\" object. String values\n * are looked up from the `ref.types` Object. So:\n *\n *   * `\"int\"` gets coerced into `ref.types.int`.\n *   * `\"int *\"` gets translated into `ref.refType(ref.types.int)`\n *   * `ref.types.int` gets translated into `ref.types.int` (returns itself)\n *\n * Throws an Error if no valid \"type\" object could be determined. Most `ref`\n * functions use this function under the hood, so anywhere a \"type\" object is\n * expected, a String may be passed as well, including simply setting the\n * `buffer.type` property.\n *\n * ```\n * var type = ref.coerceType('int **');\n *\n * console.log(type.indirection);\n * 3\n * ```\n *\n * @param {Object|String} type The \"type\" Object or String to coerce.\n * @return {Object} A \"type\" object\n */\n\nexports.coerceType = function coerceType (type) {\n  let rtn = type;\n  if (typeof rtn === 'string') {\n    rtn = exports.types[type];\n    if (rtn) return rtn;\n\n    // strip whitespace\n    rtn = type.replace(/\\s+/g, '').toLowerCase();\n    if (rtn === 'pointer') {\n      // legacy \"pointer\" being used :(\n      rtn = exports.refType(exports.types.void); // void *\n    } else if (rtn === 'string') {\n      rtn = exports.types.CString; // special char * type\n    } else {\n      var refCount = 0;\n      rtn = rtn.replace(/\\*/g, function() {\n        refCount++;\n        return '';\n      });\n      // allow string names to be passed in\n      rtn = exports.types[rtn];\n      if (refCount > 0) {\n        if (!(rtn && 'size' in rtn && 'indirection' in rtn)) {\n          throw new TypeError('could not determine a proper \"type\" from: ' + inspect(type));\n        }\n        for (let i = 0; i < refCount; i++) {\n          rtn = exports.refType(rtn);\n        }\n      }\n    }\n  }\n  if (!(rtn && 'size' in rtn && 'indirection' in rtn)) {\n    throw new TypeError('could not determine a proper \"type\" from: ' + inspect(type));\n  }\n  return rtn;\n}\n\n/**\n * Returns the \"type\" property of the given Buffer.\n * Creates a default type for the buffer when none exists.\n *\n * @param {Buffer} buffer The Buffer instance to get the \"type\" object from.\n * @return {Object} The \"type\" object from the given Buffer.\n */\n\nexports.getType = function getType (buffer) {\n  if (!buffer.type) {\n    debug('WARN: no \"type\" found on buffer, setting default \"type\"', buffer);\n    buffer.type = {};\n    buffer.type.size = buffer.length;\n    buffer.type.indirection = 1;\n    buffer.type.get = function get () {\n      throw new Error('unknown \"type\"; cannot get()');\n    };\n    buffer.type.set = function set () {\n      throw new Error('unknown \"type\"; cannot set()');\n    };\n  }\n  return exports.coerceType(buffer.type);\n}\n\n/**\n * Calls the `get()` function of the Buffer's current \"type\" (or the\n * passed in _type_ if present) at the given _offset_.\n *\n * This function handles checking the \"indirection\" level and returning a\n * proper \"dereferenced\" Bufffer instance when necessary.\n *\n * @param {Buffer} buffer The Buffer instance to read from.\n * @param {Number} offset (optional) The offset on the Buffer to start reading from. Defaults to 0.\n * @param {Object|String} type (optional) The \"type\" object to use when reading. Defaults to calling `getType()` on the buffer.\n * @return {?} Whatever value the \"type\" used when reading returns.\n */\n\nexports.get = function get (buffer, offset, type) {\n  if (!offset) {\n    offset = 0;\n  }\n  if (type) {\n    type = exports.coerceType(type);\n  } else {\n    type = exports.getType(buffer);\n  }\n  debug('get(): (offset: %d)', offset, buffer);\n  assert(type.indirection > 0, `\"indirection\" level must be at least 1, saw ${type.indirection}`);\n  if (type.indirection === 1) {\n    // need to check \"type\"\n    return type.get(buffer, offset);\n  } else {\n    // need to create a deref'd Buffer\n    const size = type.indirection === 2 ? type.size : exports.sizeof.pointer;\n    const reference = exports.readPointer(buffer, offset, size);\n    reference.type = exports.derefType(type);\n    return reference;\n  }\n}\n\n/**\n * Calls the `set()` function of the Buffer's current \"type\" (or the\n * passed in _type_ if present) at the given _offset_.\n *\n * This function handles checking the \"indirection\" level writing a pointer rather\n * than calling the `set()` function if the indirection is greater than 1.\n *\n * @param {Buffer} buffer The Buffer instance to write to.\n * @param {Number} offset The offset on the Buffer to start writing to.\n * @param {?} value The value to write to the Buffer instance.\n * @param {Object|String} type (optional) The \"type\" object to use when reading. Defaults to calling `getType()` on the buffer.\n */\n\nexports.set = function set (buffer, offset, value, type) {\n  if (!offset) {\n    offset = 0;\n  }\n  if (type) {\n    type = exports.coerceType(type);\n  } else {\n    type = exports.getType(buffer);\n  }\n  debug('set(): (offset: %d)', offset, buffer, value);\n  assert(type.indirection >= 1, '\"indirection\" level must be at least 1');\n  if (type.indirection === 1) {\n    type.set(buffer, offset, value);\n  } else {\n    exports.writePointer(buffer, offset, value);\n  }\n}\n\n\n/**\n * Returns a new Buffer instance big enough to hold `type`,\n * with the given `value` written to it.\n *\n * ``` js\n * var intBuf = ref.alloc(ref.types.int)\n * var int_with_4 = ref.alloc(ref.types.int, 4)\n * ```\n *\n * @param {Object|String} type The \"type\" object to allocate. Strings get coerced first.\n * @param {?} value (optional) The initial value set on the returned Buffer, using _type_'s `set()` function.\n * @return {Buffer} A new Buffer instance with it's `type` set to \"type\", and (optionally) \"value\" written to it.\n */\n\nexports.alloc = function alloc (_type, value) {\n  var type = exports.coerceType(_type);\n  debug('allocating Buffer for type with \"size\"', type.size);\n  let size;\n  if (type.indirection === 1) {\n    size = type.size;\n  } else {\n    size = exports.sizeof.pointer;\n  }\n  const buffer = new Buffer(size);\n  buffer.type = type;\n  if (arguments.length >= 2) {\n    debug('setting value on allocated buffer', value);\n    exports.set(buffer, 0, value, type);\n  }\n  return buffer;\n}\n\n/**\n * Returns a new `Buffer` instance with the given String written to it with the\n * given encoding (defaults to __'utf8'__). The buffer is 1 byte longer than the\n * string itself, and is NUL terminated.\n *\n * ```\n * var buf = ref.allocCString('hello world');\n *\n * console.log(buf.toString());\n * 'hello world\\u0000'\n * ```\n *\n * @param {String} string The JavaScript string to be converted to a C string.\n * @param {String} encoding (optional) The encoding to use for the C string. Defaults to __'utf8'__.\n * @return {Buffer} The new `Buffer` instance with the specified String wrtten to it, and a trailing NUL byte.\n */\n\nexports.allocCString = function allocCString (string, encoding) {\n  if (null == string || (Buffer.isBuffer(string) && exports.isNull(string))) {\n    return exports.NULL;\n  }\n  const size = Buffer.byteLength(string, encoding) + 1;\n  const buffer = new Buffer(size);\n  exports.writeCString(buffer, 0, string, encoding);\n  buffer.type = charPtrType;\n  return buffer;\n}\n\n/**\n * Writes the given string as a C String (NULL terminated) to the given buffer\n * at the given offset. \"encoding\" is optional and defaults to __'utf8'__.\n *\n * Unlike `readCString()`, this function requires the buffer to actually have the\n * proper length.\n *\n * @param {Buffer} buffer The Buffer instance to write to.\n * @param {Number} offset The offset of the buffer to begin writing at.\n * @param {String} string The JavaScript String to write that will be written to the buffer.\n * @param {String} encoding (optional) The encoding to read the C string as. Defaults to __'utf8'__.\n */\n\nexports.writeCString = function writeCString (buffer, offset, string, encoding) {\n  assert(Buffer.isBuffer(buffer), 'expected a Buffer as the first argument');\n  assert.strictEqual('string', typeof string, 'expected a \"string\" as the third argument');\n  if (!offset) {\n    offset = 0;\n  }\n  if (!encoding) {\n    encoding = 'utf8';\n  }\n  const size = buffer.length - offset;\n  const len = buffer.write(string, offset, size, encoding);\n  buffer.writeUInt8(0, offset + len);  // NUL terminate\n}\n\nexports['readInt64' + exports.endianness] = exports.readInt64;\nexports['readUInt64' + exports.endianness] = exports.readUInt64;\nexports['writeInt64' + exports.endianness] = exports.writeInt64;\nexports['writeUInt64' + exports.endianness] = exports.writeUInt64;\n\nvar opposite = exports.endianness == 'LE' ? 'BE' : 'LE';\nvar int64temp =  Buffer.alloc(exports.sizeof.int64);\nvar uint64temp = Buffer.alloc(exports.sizeof.uint64);\n\nexports['readInt64' + opposite] = function (buffer, offset) {\n  for (let i = 0; i < exports.sizeof.int64; i++) {\n    int64temp[i] = buffer[offset + exports.sizeof.int64 - i - 1];\n  }\n  return exports.readInt64(int64temp, 0);\n}\nexports['readUInt64' + opposite] = function (buffer, offset) {\n  for (let i = 0; i < exports.sizeof.uint64; i++) {\n    uint64temp[i] = buffer[offset + exports.sizeof.uint64 - i - 1];\n  }\n  return exports.readUInt64(uint64temp, 0);\n}\nexports['writeInt64' + opposite] = function (buffer, offset, value) {\n  exports.writeInt64(int64temp, 0, value);\n  for (let i = 0; i < exports.sizeof.int64; i++) {\n    buffer[offset + i] = int64temp[exports.sizeof.int64 - i - 1];\n  }\n}\nexports['writeUInt64' + opposite] = function (buffer, offset, value) {\n  exports.writeUInt64(uint64temp, 0, value);\n  for (let i = 0; i < exports.sizeof.uint64; i++) {\n    buffer[offset + i] = uint64temp[exports.sizeof.uint64 - i - 1];\n  }\n}\n\n/**\n * `ref()` accepts a Buffer instance and returns a new Buffer\n * instance that is \"pointer\" sized and has its data pointing to the given\n * Buffer instance. Essentially the created Buffer is a \"reference\" to the\n * original pointer, equivalent to the following C code:\n *\n * ``` c\n * char *buf = buffer;\n * char **ref = &buf;\n * ```\n *\n * @param {Buffer} buffer A Buffer instance to create a reference to.\n * @return {Buffer} A new Buffer instance pointing to _buffer_.\n */\n\nexports.ref = function ref (buffer) {\n  debug('creating a reference to buffer', buffer);\n  var type = exports.refType(exports.getType(buffer));\n  return exports.alloc(type, buffer);\n}\n\n/**\n * Accepts a Buffer instance and attempts to \"dereference\" it.\n * That is, first it checks the `indirection` count of _buffer_'s \"type\", and if\n * it's greater than __1__ then it merely returns another Buffer, but with one\n * level less `indirection`.\n *\n * When _buffer_'s indirection is at __1__, then it checks for `buffer.type`\n * which should be an Object with its own `get()` function.\n *\n * ```\n * var buf = ref.alloc('int', 6);\n *\n * var val = ref.deref(buf);\n * console.log(val);\n * 6\n * ```\n *\n *\n * @param {Buffer} buffer A Buffer instance to dereference.\n * @return {?} The returned value after dereferencing _buffer_.\n */\n\nexports.deref = function deref (buffer) {\n  debug('dereferencing buffer', buffer);\n  return exports.get(buffer);\n}\n\nconst kAttachedRefs = Symbol('attached');\n\n/**\n * Attaches _object_ to _buffer_ such that it prevents _object_ from being garbage\n * collected until _buffer_ does.\n *\n * @param {Buffer} buffer A Buffer instance to attach _object_ to.\n * @param {Object|Buffer} object An Object or Buffer to prevent from being garbage collected until _buffer_ does.\n * @api private\n */\n\nexports._attach = function _attach (buf, obj) {\n  if (!buf[kAttachedRefs]) {\n    buf[kAttachedRefs] = [];\n  }\n  buf[kAttachedRefs].push(obj);\n}\n\nexports._writeObject = exports.writeObject;\n/**\n * Writes a pointer to _object_ into _buffer_ at the specified _offset.\n *\n * This function \"attaches\" _object_ to _buffer_ to prevent it from being garbage\n * collected.\n *\n * ```\n * var buf = ref.alloc('Object');\n * ref.writeObject(buf, 0, { foo: 'bar' });\n *\n * ```\n *\n * @param {Buffer} buffer A Buffer instance to write _object_ to.\n * @param {Number} offset The offset on the Buffer to start writing at.\n * @param {Object} object The Object to be written into _buffer_.\n */\n\nexports.writeObject = function writeObject (buf, offset, obj) {\n  debug('writing Object to buffer', buf, offset, obj);\n  exports._writeObject(buf, offset, obj);\n  exports._attach(buf, obj);\n}\n\n\n/**\n * Same as `ref.writePointer()`, except that this version does not attach\n * _pointer_ to _buffer_, which is potentially unsafe if the garbage collector\n * runs.\n *\n * @param {Buffer} buffer A Buffer instance to write _pointer to.\n * @param {Number} offset The offset on the Buffer to start writing at.\n * @param {Buffer} pointer The Buffer instance whose memory address will be written to _buffer_.\n * @api private\n */\n\nexports._writePointer = exports.writePointer;\n\n/**\n * Writes the memory address of _pointer_ to _buffer_ at the specified _offset_.\n *\n * This function \"attaches\" _object_ to _buffer_ to prevent it from being garbage\n * collected.\n *\n * ```\n * var someBuffer = new Buffer('whatever');\n * var buf = ref.alloc('pointer');\n * ref.writePointer(buf, 0, someBuffer);\n * ```\n *\n * @param {Buffer} buffer A Buffer instance to write _pointer to.\n * @param {Number} offset The offset on the Buffer to start writing at.\n * @param {Buffer} pointer The Buffer instance whose memory address will be written to _buffer_.\n */\n\nexports.writePointer = function writePointer (buf, offset, ptr) {\n  debug('writing pointer to buffer', buf, offset, ptr);\n  exports._writePointer(buf, offset, ptr);\n  exports._attach(buf, ptr);\n};\n\n/**\n * Same as `ref.reinterpret()`, except that this version does not attach\n * _buffer_ to the returned Buffer, which is potentially unsafe if the\n * garbage collector runs.\n *\n * @param {Buffer} buffer A Buffer instance to base the returned Buffer off of.\n * @param {Number} size The `length` property of the returned Buffer.\n * @param {Number} offset The offset of the Buffer to begin from.\n * @return {Buffer} A new Buffer instance with the same memory address as _buffer_, and the requested _size_.\n * @api private\n */\n\nexports._reinterpret = exports.reinterpret;\n\n/**\n * Returns a new Buffer instance with the specified _size_, with the same memory\n * address as _buffer_.\n *\n * This function \"attaches\" _buffer_ to the returned Buffer to prevent it from\n * being garbage collected.\n *\n * @param {Buffer} buffer A Buffer instance to base the returned Buffer off of.\n * @param {Number} size The `length` property of the returned Buffer.\n * @param {Number} offset The offset of the Buffer to begin from.\n * @return {Buffer} A new Buffer instance with the same memory address as _buffer_, and the requested _size_.\n */\n\nexports.reinterpret = function reinterpret (buffer, size, offset) {\n  debug('reinterpreting buffer to \"%d\" bytes', size);\n  const rtn = exports._reinterpret(buffer, size, offset || 0);\n  exports._attach(rtn, buffer);\n  return rtn;\n}\n\n/**\n * Same as `ref.reinterpretUntilZeros()`, except that this version does not\n * attach _buffer_ to the returned Buffer, which is potentially unsafe if the\n * garbage collector runs.\n *\n * @param {Buffer} buffer A Buffer instance to base the returned Buffer off of.\n * @param {Number} size The number of sequential, aligned `NULL` bytes that are required to terminate the buffer.\n * @param {Number} offset The offset of the Buffer to begin from.\n * @return {Buffer} A new Buffer instance with the same memory address as _buffer_, and a variable `length` that is terminated by _size_ NUL bytes.\n * @api private\n */\n\nexports._reinterpretUntilZeros = exports.reinterpretUntilZeros;\n\n/**\n * Accepts a `Buffer` instance and a number of `NULL` bytes to read from the\n * pointer. This function will scan past the boundary of the Buffer's `length`\n * until it finds `size` number of aligned `NULL` bytes.\n *\n * This is useful for finding the end of NUL-termintated array or C string. For\n * example, the `readCString()` function _could_ be implemented like:\n *\n * ```\n * function readCString (buf) {\n *   return ref.reinterpretUntilZeros(buf, 1).toString('utf8')\n * }\n * ```\n *\n * This function \"attaches\" _buffer_ to the returned Buffer to prevent it from\n * being garbage collected.\n *\n * @param {Buffer} buffer A Buffer instance to base the returned Buffer off of.\n * @param {Number} size The number of sequential, aligned `NULL` bytes are required to terminate the buffer.\n * @param {Number} offset The offset of the Buffer to begin from.\n * @return {Buffer} A new Buffer instance with the same memory address as _buffer_, and a variable `length` that is terminated by _size_ NUL bytes.\n */\n\nexports.reinterpretUntilZeros = function reinterpretUntilZeros (buffer, size, offset) {\n  debug('reinterpreting buffer to until \"%d\" NULL (0) bytes are found', size);\n  var rtn = exports._reinterpretUntilZeros(buffer, size, offset || 0);\n  exports._attach(rtn, buffer);\n  return rtn;\n};\n\n\n// the built-in \"types\"\nconst types = exports.types = {};\n\n/**\n * The `void` type.\n *\n * @section types\n */\n\ntypes.void = {\n  size: 0,\n  indirection: 1,\n  get: function get (buf, offset) {\n    debug('getting `void` type (returns `null`)');\n    return null;\n  },\n  set: function set (buf, offset, val) {\n    debug('setting `void` type (no-op)');\n  }\n};\n\n/**\n * The `int8` type.\n */\n\ntypes.int8 = {\n  size: exports.sizeof.int8,\n  indirection: 1,\n  get: function get (buf, offset) {\n    return buf.readInt8(offset || 0);\n  },\n  set: function set (buf, offset, val) {\n    if (typeof val === 'string') {\n      val = val.charCodeAt(0);\n    }\n    return buf.writeInt8(val, offset || 0);\n  }\n};\n\n/**\n * The `uint8` type.\n */\n\ntypes.uint8 = {\n  size: exports.sizeof.uint8,\n  indirection: 1,\n  get: function get (buf, offset) {\n    return buf.readUInt8(offset || 0);\n  },\n  set: function set (buf, offset, val) {\n    if (typeof val === 'string') {\n      val = val.charCodeAt(0);\n    }\n    return buf.writeUInt8(val, offset || 0);\n  }\n};\n\n/**\n * The `int16` type.\n */\n\ntypes.int16 = {\n  size: exports.sizeof.int16,\n  indirection: 1,\n  get: function get (buf, offset) {\n    return buf['readInt16' + exports.endianness](offset || 0);\n  },\n  set: function set (buf, offset, val) {\n    return buf['writeInt16' + exports.endianness](val, offset || 0);\n  }\n}\n\n/**\n * The `uint16` type.\n */\n\ntypes.uint16 = {\n  size: exports.sizeof.uint16,\n  indirection: 1,\n  get: function get (buf, offset) {\n    return buf['readUInt16' + exports.endianness](offset || 0);\n  },\n  set: function set (buf, offset, val) {\n    return buf['writeUInt16' + exports.endianness](val, offset || 0);\n  }\n}\n\n/**\n * The `int32` type.\n */\n\ntypes.int32 = {\n  size: exports.sizeof.int32,\n  indirection: 1,\n  get: function get (buf, offset) {\n    return buf['readInt32' + exports.endianness](offset || 0);\n  },\n  set: function set (buf, offset, val) {\n    return buf['writeInt32' + exports.endianness](val, offset || 0);\n  }\n}\n\n/**\n * The `uint32` type.\n */\n\ntypes.uint32 = {\n  size: exports.sizeof.uint32,\n  indirection: 1,\n  get: function get (buf, offset) {\n    return buf['readUInt32' + exports.endianness](offset || 0);\n  },\n  set: function set (buf, offset, val) {\n    return buf['writeUInt32' + exports.endianness](val, offset || 0);\n  }\n}\n\n/**\n * The `int64` type.\n */\n\ntypes.int64 = {\n  size: exports.sizeof.int64,\n  indirection: 1,\n  get: function get (buf, offset) {\n    return buf['readInt64' + exports.endianness](offset || 0);\n  },\n  set: function set (buf, offset, val) {\n    return buf['writeInt64' + exports.endianness](val, offset || 0);\n  }\n}\n\n/**\n * The `uint64` type.\n */\n\ntypes.uint64 = {\n  size: exports.sizeof.uint64,\n  indirection: 1,\n  get: function get (buf, offset) {\n    return buf['readUInt64' + exports.endianness](offset || 0);\n  },\n  set: function set (buf, offset, val) {\n    return buf['writeUInt64' + exports.endianness](val, offset || 0);\n  }\n}\n\n/**\n * The `float` type.\n */\n\ntypes.float = {\n  size: exports.sizeof.float,\n  indirection: 1,\n  get: function get (buf, offset) {\n    return buf['readFloat' + exports.endianness](offset || 0);\n  },\n  set: function set (buf, offset, val) {\n    return buf['writeFloat' + exports.endianness](val, offset || 0);\n  }\n}\n\n/**\n * The `double` type.\n */\n\ntypes.double = {\n  size: exports.sizeof.double,\n  indirection: 1,\n  get: function get (buf, offset) {\n    return buf['readDouble' + exports.endianness](offset || 0)\n  },\n  set: function set (buf, offset, val) {\n    return buf['writeDouble' + exports.endianness](val, offset || 0)\n  }\n}\n\n/**\n * The `Object` type. This can be used to read/write regular JS Objects\n * into raw memory.\n */\n\ntypes.Object = {\n  size: exports.sizeof.Object,\n  indirection: 1,\n  get: function get (buf, offset) {\n    return buf.readObject(offset || 0);\n  },\n  set: function set (buf, offset, val) {\n    return buf.writeObject(val, offset || 0);\n  }\n}\n\n/**\n * The `CString` (a.k.a `\"string\"`) type.\n *\n * CStrings are a kind of weird thing. We say it's `sizeof(char *)`, and\n * `indirection` level of 1, which means that we have to return a Buffer that\n * is pointer sized, and points to a some utf8 string data, so we have to create\n * a 2nd \"in-between\" buffer.\n */\n\ntypes.CString = {\n  size: exports.sizeof.pointer,\n  alignment: exports.alignof.pointer,\n  indirection: 1,\n  get: function get (buf, offset) {\n    const _buf = exports.readPointer(buf, offset)\n    if (exports.isNull(_buf)) {\n      return null;\n    }\n    return exports.readCString(_buf, 0);\n  },\n  set: function set (buf, offset, val) {\n    let _buf\n    if (Buffer.isBuffer(val)) {\n      _buf = val;\n    } else {\n      // assume string\n      _buf = exports.allocCString(val);\n    }\n    return exports.writePointer(buf, offset, _buf);\n  }\n}\n\n// alias Utf8String\nvar utfstringwarned = false;\nObject.defineProperty(types, 'Utf8String', {\n  enumerable: false,\n  configurable: true,\n  get: function() {\n    if (!utfstringwarned) {\n      utfstringwarned = true;\n      console.error('\"Utf8String\" type is deprecated, use \"CString\" instead');\n    }\n    return types.CString;\n  }\n});\n\n/**\n * The `bool` type.\n *\n * Wrapper type around `types.uint8` that accepts/returns `true` or\n * `false` Boolean JavaScript values.\n *\n * @name bool\n *\n */\n\n/**\n * The `byte` type.\n *\n * @name byte\n */\n\n/**\n * The `char` type.\n *\n * @name char\n */\n\n/**\n * The `uchar` type.\n *\n * @name uchar\n */\n\n/**\n * The `short` type.\n *\n * @name short\n */\n\n/**\n * The `ushort` type.\n *\n * @name ushort\n */\n\n/**\n * The `int` type.\n *\n * @name int\n */\n\n/**\n * The `uint` type.\n *\n * @name uint\n */\n\n/**\n * The `long` type.\n *\n * @name long\n */\n\n/**\n * The `ulong` type.\n *\n * @name ulong\n */\n\n/**\n * The `longlong` type.\n *\n * @name longlong\n */\n\n/**\n * The `ulonglong` type.\n *\n * @name ulonglong\n */\n\n/**\n * The `size_t` type.\n *\n * @name size_t\n */\n\n// \"typedef\"s for the variable-sized types\n[ 'bool', 'byte', 'char', 'uchar', 'short', 'ushort', 'int', 'uint', 'long',\n  'ulong', 'longlong', 'ulonglong', 'size_t' ].forEach(name => {\n  const unsigned = name === 'bool'\n                || name === 'byte'\n                || name === 'size_t'\n                || name[0] === 'u';\n  const size = exports.sizeof[name];\n  assert(size >= 1 && size <= 8);\n  let typeName = 'int' + (size * 8);\n  if (unsigned) {\n    typeName = 'u' + typeName;\n  }\n  const type = exports.types[typeName];\n  assert(type);\n  exports.types[name] = Object.create(type);\n});\n\n// set the \"alignment\" property on the built-in types\nObject.keys(exports.alignof).forEach((name) => {\n  if (name === 'pointer')\n    return;\n  exports.types[name].alignment = exports.alignof[name];\n  assert(exports.types[name].alignment > 0);\n});\n\n// make the `bool` type work with JS true/false values\nexports.types.bool.get = (function (_get) {\n  return function get (buf, offset) {\n    return _get(buf, offset) ? true : false;\n  }\n})(exports.types.bool.get);\nexports.types.bool.set = (function (_set) {\n  return function set (buf, offset, val) {\n    if (typeof val !== 'number') {\n      val = val ? 1 : 0;\n    }\n    return _set(buf, offset, val);\n  }\n})(exports.types.bool.set);\n\n/*!\n * Set the `name` property of the types. Used for debugging...\n */\n\nObject.keys(exports.types).forEach((name) => {\n  exports.types[name].name = name;\n});\n\n/*!\n * This `char *` type is used by \"allocCString()\" above.\n */\n\nconst charPtrType = exports.refType(exports.types.char);\n\n/*!\n * Set the `type` property of the `NULL` pointer Buffer object.\n */\n\nexports.NULL.type = exports.types.void;\n\n/**\n * `NULL_POINTER` is a pointer-sized `Buffer` instance pointing to `NULL`.\n * Conceptually, it's equivalent to the following C code:\n *\n * ``` c\n * char *null_pointer;\n * null_pointer = NULL;\n * ```\n *\n * @type Buffer\n */\n\nexports.NULL_POINTER = exports.ref(exports.NULL);\n\n/**\n * All these '...' comment blocks below are for the documentation generator.\n *\n * @section buffer\n */\n\nBuffer.prototype.address = function address () {\n  return exports.address(this, 0);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.hexAddress = function hexAddress () {\n  return exports.hexAddress(this, 0);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.isNull = function isNull () {\n  return exports.isNull(this, 0);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.ref = function ref () {\n  return exports.ref(this);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.deref = function deref () {\n  return exports.deref(this);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.readObject = function readObject (offset) {\n  return exports.readObject(this, offset);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.writeObject = function writeObject (obj, offset) {\n  return exports.writeObject(this, offset, obj);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.readPointer = function readPointer (offset, size) {\n  return exports.readPointer(this, offset, size);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.writePointer = function writePointer (ptr, offset) {\n  return exports.writePointer(this, offset, ptr);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.readCString = function readCString (offset) {\n  return exports.readCString(this, offset);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.writeCString = function writeCString (string, offset, encoding) {\n  return exports.writeCString(this, offset, string, encoding);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.readInt64BE = function readInt64BE (offset) {\n  return exports.readInt64BE(this, offset);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.writeInt64BE = function writeInt64BE (val, offset) {\n  return exports.writeInt64BE(this, offset, val);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.readUInt64BE = function readUInt64BE (offset) {\n  return exports.readUInt64BE(this, offset);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.writeUInt64BE = function writeUInt64BE (val, offset) {\n  return exports.writeUInt64BE(this, offset, val);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.readInt64LE = function readInt64LE (offset) {\n  return exports.readInt64LE(this, offset);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.writeInt64LE = function writeInt64LE (val, offset) {\n  return exports.writeInt64LE(this, offset, val);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.readUInt64LE = function readUInt64LE (offset) {\n  return exports.readUInt64LE(this, offset);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.writeUInt64LE = function writeUInt64LE (val, offset) {\n  return exports.writeUInt64LE(this, offset, val);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.reinterpret = function reinterpret (size, offset) {\n  return exports.reinterpret(this, size, offset);\n};\n\n/**\n * ...\n */\n\nBuffer.prototype.reinterpretUntilZeros = function reinterpretUntilZeros (size, offset) {\n  return exports.reinterpretUntilZeros(this, size, offset);\n};\n\n/**\n * `ref` overwrites the default `Buffer#inspect()` function to include the\n * hex-encoded memory address of the Buffer instance when invoked.\n *\n * This is simply a nice-to-have.\n *\n * **Before**:\n *\n * ``` js\n * console.log(new Buffer('ref'));\n * <Buffer 72 65 66>\n * ```\n *\n * **After**:\n *\n * ``` js\n * console.log(new Buffer('ref'));\n * <Buffer@0x103015490 72 65 66>\n * ```\n */\n\nvar inspectSym = inspect.custom || 'inspect';\n/**\n * in node 6.91, inspect.custom does not give a correct value; so in this case, don't torch the whole process.\n * fixed in >6.9.2\n */\nif (Buffer.prototype[inspectSym]) {\n  Buffer.prototype[inspectSym] = overwriteInspect(Buffer.prototype[inspectSym]);\n}\n\n\n// does SlowBuffer inherit from Buffer? (node >= v0.7.9)\nif (!(exports.NULL instanceof Buffer)) {\n  debug('extending SlowBuffer\\'s prototype since it doesn\\'t inherit from Buffer.prototype');\n\n  /*!\n   * SlowBuffer convenience methods.\n   */\n\n  var SlowBuffer = require('buffer').SlowBuffer;\n\n  SlowBuffer.prototype.address = Buffer.prototype.address;\n  SlowBuffer.prototype.hexAddress = Buffer.prototype.hexAddress;\n  SlowBuffer.prototype.isNull = Buffer.prototype.isNull;\n  SlowBuffer.prototype.ref = Buffer.prototype.ref;\n  SlowBuffer.prototype.deref = Buffer.prototype.deref;\n  SlowBuffer.prototype.readObject = Buffer.prototype.readObject;\n  SlowBuffer.prototype.writeObject = Buffer.prototype.writeObject;\n  SlowBuffer.prototype.readPointer = Buffer.prototype.readPointer;\n  SlowBuffer.prototype.writePointer = Buffer.prototype.writePointer;\n  SlowBuffer.prototype.readCString = Buffer.prototype.readCString;\n  SlowBuffer.prototype.writeCString = Buffer.prototype.writeCString;\n  SlowBuffer.prototype.reinterpret = Buffer.prototype.reinterpret;\n  SlowBuffer.prototype.reinterpretUntilZeros = Buffer.prototype.reinterpretUntilZeros;\n  SlowBuffer.prototype.readInt64BE = Buffer.prototype.readInt64BE;\n  SlowBuffer.prototype.writeInt64BE = Buffer.prototype.writeInt64BE;\n  SlowBuffer.prototype.readUInt64BE = Buffer.prototype.readUInt64BE;\n  SlowBuffer.prototype.writeUInt64BE = Buffer.prototype.writeUInt64BE;\n  SlowBuffer.prototype.readInt64LE = Buffer.prototype.readInt64LE;\n  SlowBuffer.prototype.writeInt64LE = Buffer.prototype.writeInt64LE;\n  SlowBuffer.prototype.readUInt64LE = Buffer.prototype.readUInt64LE;\n  SlowBuffer.prototype.writeUInt64LE = Buffer.prototype.writeUInt64LE;\n/**\n * in node 6.9.1, inspect.custom does not give a correct value; so in this case, don't torch the whole process.\n * fixed in >6.9.2\n */\n  if (SlowBuffer.prototype[inspectSym]){\n    SlowBuffer.prototype[inspectSym] = overwriteInspect(SlowBuffer.prototype[inspectSym]);\n  }\n}\n\nfunction overwriteInspect (inspect) {\n  if (inspect.name === 'refinspect') {\n    return inspect;\n  } else {\n    return function refinspect () {\n      var v = inspect.apply(this, arguments);\n      return v.replace('Buffer', 'Buffer@0x' + this.hexAddress());\n    }\n  }\n}\n","\"use strict\";\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n\n","'use strict';\nmodule.exports = require('bindings')('ffi_bindings.node');\n","module.exports = require(\"vscode\");","module.exports = require(\"util\");","'use strict';\n/**\n * Module dependencies.\n */\n\nconst CIF = require('./cif');\nconst _ForeignFunction = require('./_foreign_function');\nconst debug = require('debug')('ffi:ForeignFunction');\nconst assert = require('assert');\nconst ref = require('ref-napi');\n\n/**\n * Represents a foreign function in another library. Manages all of the aspects\n * of function execution, including marshalling the data parameters for the\n * function into native types and also unmarshalling the return from function\n * execution.\n */\n\nfunction ForeignFunction (funcPtr, returnType, argTypes, abi) {\n  debug('creating new ForeignFunction', funcPtr);\n\n  // check args\n  assert(Buffer.isBuffer(funcPtr), 'expected Buffer as first argument');\n  assert(!!returnType, 'expected a return \"type\" object as the second argument');\n  assert(Array.isArray(argTypes), 'expected Array of arg \"type\" objects as the third argument');\n\n  // normalize the \"types\" (they could be strings,\n  // so turn into real type instances)\n  returnType = ref.coerceType(returnType);\n  argTypes = argTypes.map(ref.coerceType);\n\n  // create the `ffi_cif *` instance\n  const cif = CIF(returnType, argTypes, abi);\n\n  // create and return the JS proxy function\n  return _ForeignFunction(cif, funcPtr, returnType, argTypes);\n}\n\nmodule.exports = ForeignFunction;\n","module.exports = require(\"path\");","'use strict';\n/**\n * Module dependencies.\n */\n\nconst ref = require('ref-napi');\nconst assert = require('assert');\nconst debug = require('debug')('ffi:types');\nconst Struct = require('ref-struct-di')(ref);\nconst bindings = require('./bindings');\n\n/**\n * Define the `ffi_type` struct (see deps/libffi/include/ffi.h) for use in JS.\n * This struct type is used internally to define custom struct ret/arg types.\n */\n\nconst FFI_TYPE = Type.FFI_TYPE = Struct();\nFFI_TYPE.defineProperty('size',      ref.types.size_t);\nFFI_TYPE.defineProperty('alignment', ref.types.ushort);\nFFI_TYPE.defineProperty('type',      ref.types.ushort);\n// this last prop is a C Array of `ffi_type *` elements, so this is `ffi_type **`\nconst ffi_type_ptr_array = ref.refType(ref.refType(FFI_TYPE));\nFFI_TYPE.defineProperty('elements',  ffi_type_ptr_array);\nassert.strictEqual(bindings.FFI_TYPE_SIZE, FFI_TYPE.size);\n\n/**\n * Returns a `ffi_type *` Buffer appropriate for the given \"type\".\n *\n * @param {Type|String} type A \"ref\" type (or string) to get the `ffi_type` for\n * @return {Buffer} A buffer pointing to a `ffi_type` instance for \"type\"\n * @api private\n */\n\nfunction Type (type) {\n  type = ref.coerceType(type);\n  debug('Type()', type.name || type);\n  assert(type.indirection >= 1, 'invalid \"type\" given: ' + (type.name || type));\n  let ret;\n\n  // first we assume it's a regular \"type\". if the \"indirection\" is greater than\n  // 1, then we can just use \"pointer\" ffi_type, otherwise we hope \"ffi_type\" is\n  // set\n  if (type.indirection === 1) {\n    ret = type.ffi_type;\n  } else {\n    ret = bindings.FFI_TYPES.pointer;\n  }\n\n  // if \"ret\" isn't set (ffi_type was not set) then we check for \"ref-array\" type\n  if (!ret && type.type) {\n    // got a \"ref-array\" type\n    // passing arrays to C functions are always by reference, so we use \"pointer\"\n    ret = bindings.FFI_TYPES.pointer;\n  }\n\n  if (!ret && type.fields) {\n    // got a \"ref-struct\" type\n    // need to create the `ffi_type` instance manually\n    debug('creating an `ffi_type` for given \"ref-struct\" type')\n    const fields = type.fields;\n    const fieldNames = Object.keys(fields);\n    const numFields = fieldNames.length;\n    let numElements = 0;\n    const ffi_type = new FFI_TYPE;\n    let field;\n    let ffi_type_ptr;\n\n    // these are the \"ffi_type\" values expected for a struct\n    ffi_type.size = 0;\n    ffi_type.alignment = 0;\n    ffi_type.type = 13; // FFI_TYPE_STRUCT\n\n    // first we have to figure out the number of \"elements\" that will go in the\n    // array. this would normally just be \"numFields\" but we also have to account\n    // for arrays, which each act as their own element\n    for (let i = 0; i < numFields; i++) {\n      field = fields[fieldNames[i]];\n      if (field.type.fixedLength > 0) {\n        // a fixed-length \"ref-array\" type\n        numElements += field.type.fixedLength;\n      } else {\n        numElements += 1;\n      }\n    }\n\n    // hand-crafting a null-terminated array here.\n    // XXX: use \"ref-array\"?\n    const size = ref.sizeof.pointer * (numElements + 1); // +1 because of the NULL terminator\n    const elements = ffi_type.elements = Buffer.alloc(size);\n    let index = 0;\n    for (let i = 0; i < numFields; i++) {\n      field = fields[fieldNames[i]];\n      if (field.type.fixedLength > 0) {\n        // a fixed-length \"ref-array\" type\n        ffi_type_ptr = Type(field.type.type);\n        for (var j = 0; j < field.type.fixedLength; j++) {\n          elements.writePointer(ffi_type_ptr, (index++) * ref.sizeof.pointer);\n        }\n      } else {\n        ffi_type_ptr = Type(field.type);\n        elements.writePointer(ffi_type_ptr, (index++) * ref.sizeof.pointer);\n      }\n    }\n    // final NULL pointer to terminate the Array\n    elements.writePointer(ref.NULL, index * ref.sizeof.pointer);\n    // also set the `ffi_type` property to that it's cached for next time\n    ret = type.ffi_type = ffi_type.ref();\n  }\n\n  if (!ret && type.name) {\n    // handle \"ref\" types other than the set that node-ffi is using (i.e.\n    // a separate copy)\n    if ('CString' == type.name) {\n      ret = type.ffi_type = bindings.FFI_TYPES.pointer;\n    } else {\n      let cur = type;\n      while (!ret && cur) {\n        ret = cur.ffi_type = bindings.FFI_TYPES[cur.name];\n        cur = Object.getPrototypeOf(cur);\n      }\n    }\n  }\n\n  assert(ret, 'Could not determine the `ffi_type` instance for type: ' + (type.name || type))\n  debug('returning `ffi_type`', ret.name)\n  return ret;\n}\n\nmodule.exports = Type;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","module.exports = require(\"tty\");","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","'use strict';\n/**\n * Module dependencies.\n */\n\nvar Type = require('./type');\nconst assert = require('assert');\nconst debug = require('debug')('ffi:cif');\nconst ref = require('ref-napi');\nconst bindings = require('./bindings');\nconst POINTER_SIZE = ref.sizeof.pointer;\nconst ffi_prep_cif = bindings.ffi_prep_cif;\nconst FFI_CIF_SIZE = bindings.FFI_CIF_SIZE;\nconst FFI_DEFAULT_ABI = bindings.FFI_DEFAULT_ABI;\n  // status codes\nconst FFI_OK = bindings.FFI_OK;\nconst FFI_BAD_TYPEDEF = bindings.FFI_BAD_TYPEDEF;\nconst FFI_BAD_ABI = bindings.FFI_BAD_ABI;\n\n/**\n * JS wrapper for the `ffi_prep_cif` function.\n * Returns a Buffer instance representing a `ffi_cif *` instance.\n */\n\nconst cifs = [];\nfunction CIF (rtype, types, abi) {\n  debug('creating `ffi_cif *` instance');\n\n  // the return and arg types are expected to be coerced at this point...\n  assert(!!rtype, 'expected a return \"type\" object as the first argument');\n  assert(Array.isArray(types), 'expected an Array of arg \"type\" objects as the second argument');\n\n  // the buffer that will contain the return `ffi_cif *` instance\n  const cif = Buffer.alloc(FFI_CIF_SIZE);\n\n  const numArgs = types.length;\n  const _argtypesptr = Buffer.alloc(numArgs * POINTER_SIZE);\n  const _rtypeptr = Type(rtype);\n\n  for (var i = 0; i < numArgs; i++) {\n    const type = types[i];\n    const ffiType = Type(type);\n\n    _argtypesptr.writePointer(ffiType, i * POINTER_SIZE);\n  }\n\n  // prevent GC of the arg type and rtn type buffers (not sure if this is required)\n  cif.rtnTypePtr = _rtypeptr;\n  cif.argTypesPtr = _argtypesptr;\n\n  if (typeof abi === 'undefined') {\n    debug('no ABI specified (this is OK), using FFI_DEFAULT_ABI');\n    abi = FFI_DEFAULT_ABI;\n  }\n\n  const status = ffi_prep_cif(cif, numArgs, _rtypeptr, _argtypesptr, abi);\n\n  if (status !== FFI_OK) {\n    switch (status) {\n      case FFI_BAD_TYPEDEF:\n      {\n        const err = new Error('ffi_prep_cif() returned an FFI_BAD_TYPEDEF error');\n        err.code = 'FFI_BAD_TYPEDEF';\n        err.errno = status;\n        throw err;\n      }\n      case FFI_BAD_ABI:\n      {\n        const err = new Error('ffi_prep_cif() returned an FFI_BAD_ABI error');\n        err.code = 'FFI_BAD_ABI';\n        err.errno = status;\n        throw err;\n      }\n      default:\n        throw new Error('ffi_prep_cif() returned an error: ' + status);\n    }\n  }\n\n  if (debug.enabled || `${process.env.DEBUG}`.match(/\\bffi\\b/))\n    cifs.push(cif);\n  return cif;\n}\n\nmodule.exports = CIF;\n","'use strict';\n/**\n * Module dependencies.\n */\n\nconst ForeignFunction = require('./foreign_function');\nconst assert = require('assert');\nconst debug = require('debug')('ffi:DynamicLibrary');\nconst bindings = require('./bindings');\nconst funcs = bindings.StaticFunctions;\nconst ref = require('ref-napi');\nconst read  = require('fs').readFileSync;\n\n// typedefs\nconst int = ref.types.int;\nconst voidPtr = ref.refType(ref.types.void);\n\nconst dlopen  = ForeignFunction(funcs.dlopen,  voidPtr, [ 'string', int ]);\nconst dlclose = ForeignFunction(funcs.dlclose, int,     [ voidPtr ]);\nconst dlsym   = ForeignFunction(funcs.dlsym,   voidPtr, [ voidPtr, 'string' ]);\nconst dlerror = ForeignFunction(funcs.dlerror, 'string', [ ]);\n\n/**\n * `DynamicLibrary` loads and fetches function pointers for dynamic libraries\n * (.so, .dylib, etc). After the libray's function pointer is acquired, then you\n * call `get(symbol)` to retreive a pointer to an exported symbol. You need to\n * call `get___()` on the pointer to dereference it into its actual value, or\n * turn the pointer into a callable function with `ForeignFunction`.\n */\n\nfunction DynamicLibrary (path, mode) {\n  if (!(this instanceof DynamicLibrary)) {\n    return new DynamicLibrary(path, mode);\n  }\n  debug('new DynamicLibrary()', path, mode);\n\n  if (null == mode) {\n    mode = DynamicLibrary.FLAGS.RTLD_LAZY;\n  }\n\n  this._handle = dlopen(path, mode);\n  assert(Buffer.isBuffer(this._handle), 'expected a Buffer instance to be returned from `dlopen()`');\n\n  if (this._handle.isNull()) {\n    var err = this.error();\n\n    // THIS CODE IS BASED ON GHC Trac ticket #2615\n    // http://hackage.haskell.org/trac/ghc/attachment/ticket/2615\n\n    // On some systems (e.g., Gentoo Linux) dynamic files (e.g. libc.so)\n    // contain linker scripts rather than ELF-format object code. This\n    // code handles the situation by recognizing the real object code\n    // file name given in the linker script.\n\n    // If an \"invalid ELF header\" error occurs, it is assumed that the\n    // .so file contains a linker script instead of ELF object code.\n    // In this case, the code looks for the GROUP ( ... ) linker\n    // directive. If one is found, the first file name inside the\n    // parentheses is treated as the name of a dynamic library and the\n    // code attempts to dlopen that file. If this is also unsuccessful,\n    // an error message is returned.\n\n    // see if the error message is due to an invalid ELF header\n    let match;\n\n    if (match = err.match(/^(([^ \\t()])+\\.so([^ \\t:()])*):([ \\t])*/)) {\n      const content = read(match[1], 'ascii');\n      // try to find a GROUP ( ... ) command\n      if (match = content.match(/GROUP *\\( *(([^ )])+)/)){\n        return DynamicLibrary.call(this, match[1], mode);\n      }\n    }\n\n    throw new Error('Dynamic Linking Error: ' + err);\n  }\n}\nmodule.exports = DynamicLibrary;\n\n/**\n * Set the exported flags from \"dlfcn.h\"\n */\n\nDynamicLibrary.FLAGS = {};\nObject.keys(bindings).forEach(function (k) {\n  if (!/^RTLD_/.test(k)) return;\n  const desc = Object.getOwnPropertyDescriptor(bindings, k);\n  Object.defineProperty(DynamicLibrary.FLAGS, k, desc);\n});\n\n\n/**\n * Close this library, returns the result of the dlclose() system function.\n */\n\nDynamicLibrary.prototype.close = function () {\n  debug('dlclose()');\n  return dlclose(this._handle);\n}\n\n/**\n * Get a symbol from this library, returns a Pointer for (memory address of) the symbol\n */\n\nDynamicLibrary.prototype.get = function (symbol) {\n  debug('dlsym()', symbol);\n  assert.strictEqual('string', typeof symbol);\n\n  const ptr = dlsym(this._handle, symbol);\n  assert(Buffer.isBuffer(ptr));\n\n  if (ptr.isNull()) {\n    throw new Error('Dynamic Symbol Retrieval Error: ' + this.error());\n  }\n\n  ptr.name = symbol;\n\n  return ptr;\n}\n\n/**\n * Returns the result of the dlerror() system function\n */\n\nDynamicLibrary.prototype.error = function error () {\n  debug('dlerror()');\n  return dlerror();\n}\n","\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n","module.exports = require(\"os\");","/**\n * Module dependencies.\n */\n\nvar fs = require('fs'),\n  path = require('path'),\n  fileURLToPath = require('file-uri-to-path'),\n  join = path.join,\n  dirname = path.dirname,\n  exists =\n    (fs.accessSync &&\n      function(path) {\n        try {\n          fs.accessSync(path);\n        } catch (e) {\n          return false;\n        }\n        return true;\n      }) ||\n    fs.existsSync ||\n    path.existsSync,\n  defaults = {\n    arrow: process.env.NODE_BINDINGS_ARROW || ' → ',\n    compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled',\n    platform: process.platform,\n    arch: process.arch,\n    nodePreGyp:\n      'node-v' +\n      process.versions.modules +\n      '-' +\n      process.platform +\n      '-' +\n      process.arch,\n    version: process.versions.node,\n    bindings: 'bindings.node',\n    try: [\n      // node-gyp's linked version in the \"build\" dir\n      ['module_root', 'build', 'bindings'],\n      // node-waf and gyp_addon (a.k.a node-gyp)\n      ['module_root', 'build', 'Debug', 'bindings'],\n      ['module_root', 'build', 'Release', 'bindings'],\n      // Debug files, for development (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Debug', 'bindings'],\n      ['module_root', 'Debug', 'bindings'],\n      // Release files, but manually compiled (legacy behavior, remove for node v0.9)\n      ['module_root', 'out', 'Release', 'bindings'],\n      ['module_root', 'Release', 'bindings'],\n      // Legacy from node-waf, node <= 0.4.x\n      ['module_root', 'build', 'default', 'bindings'],\n      // Production \"Release\" buildtype binary (meh...)\n      ['module_root', 'compiled', 'version', 'platform', 'arch', 'bindings'],\n      // node-qbs builds\n      ['module_root', 'addon-build', 'release', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'debug', 'install-root', 'bindings'],\n      ['module_root', 'addon-build', 'default', 'install-root', 'bindings'],\n      // node-pre-gyp path ./lib/binding/{node_abi}-{platform}-{arch}\n      ['module_root', 'lib', 'binding', 'nodePreGyp', 'bindings']\n    ]\n  };\n\n/**\n * The main `bindings()` function loads the compiled bindings for a given module.\n * It uses V8's Error API to determine the parent filename that this function is\n * being invoked from, which is then used to find the root directory.\n */\n\nfunction bindings(opts) {\n  // Argument surgery\n  if (typeof opts == 'string') {\n    opts = { bindings: opts };\n  } else if (!opts) {\n    opts = {};\n  }\n\n  // maps `defaults` onto `opts` object\n  Object.keys(defaults).map(function(i) {\n    if (!(i in opts)) opts[i] = defaults[i];\n  });\n\n  // Get the module root\n  if (!opts.module_root) {\n    opts.module_root = exports.getRoot(exports.getFileName());\n  }\n\n  // Ensure the given bindings name ends with .node\n  if (path.extname(opts.bindings) != '.node') {\n    opts.bindings += '.node';\n  }\n\n  // https://github.com/webpack/webpack/issues/4175#issuecomment-342931035\n  var requireFunc =\n    typeof __webpack_require__ === 'function'\n      ? __non_webpack_require__\n      : require;\n\n  var tries = [],\n    i = 0,\n    l = opts.try.length,\n    n,\n    b,\n    err;\n\n  for (; i < l; i++) {\n    n = join.apply(\n      null,\n      opts.try[i].map(function(p) {\n        return opts[p] || p;\n      })\n    );\n    tries.push(n);\n    try {\n      b = opts.path ? requireFunc.resolve(n) : requireFunc(n);\n      if (!opts.path) {\n        b.path = n;\n      }\n      return b;\n    } catch (e) {\n      if (e.code !== 'MODULE_NOT_FOUND' &&\n          e.code !== 'QUALIFIED_PATH_RESOLUTION_FAILED' &&\n          !/not find/i.test(e.message)) {\n        throw e;\n      }\n    }\n  }\n\n  err = new Error(\n    'Could not locate the bindings file. Tried:\\n' +\n      tries\n        .map(function(a) {\n          return opts.arrow + a;\n        })\n        .join('\\n')\n  );\n  err.tries = tries;\n  throw err;\n}\nmodule.exports = exports = bindings;\n\n/**\n * Gets the filename of the JavaScript file that invokes this function.\n * Used to help find the root directory of a module.\n * Optionally accepts an filename argument to skip when searching for the invoking filename\n */\n\nexports.getFileName = function getFileName(calling_file) {\n  var origPST = Error.prepareStackTrace,\n    origSTL = Error.stackTraceLimit,\n    dummy = {},\n    fileName;\n\n  Error.stackTraceLimit = 10;\n\n  Error.prepareStackTrace = function(e, st) {\n    for (var i = 0, l = st.length; i < l; i++) {\n      fileName = st[i].getFileName();\n      if (fileName !== __filename) {\n        if (calling_file) {\n          if (fileName !== calling_file) {\n            return;\n          }\n        } else {\n          return;\n        }\n      }\n    }\n  };\n\n  // run the 'prepareStackTrace' function above\n  Error.captureStackTrace(dummy);\n  dummy.stack;\n\n  // cleanup\n  Error.prepareStackTrace = origPST;\n  Error.stackTraceLimit = origSTL;\n\n  // handle filename that starts with \"file://\"\n  var fileSchema = 'file://';\n  if (fileName.indexOf(fileSchema) === 0) {\n    fileName = fileURLToPath(fileName);\n  }\n\n  return fileName;\n};\n\n/**\n * Gets the root directory of a module, given an arbitrary filename\n * somewhere in the module tree. The \"root directory\" is the directory\n * containing the `package.json` file.\n *\n *   In:  /home/nate/node-native-module/lib/index.js\n *   Out: /home/nate/node-native-module\n */\n\nexports.getRoot = function getRoot(file) {\n  var dir = dirname(file),\n    prev;\n  while (true) {\n    if (dir === '.') {\n      // Avoids an infinite loop in rare cases, like the REPL\n      dir = process.cwd();\n    }\n    if (\n      exists(join(dir, 'package.json')) ||\n      exists(join(dir, 'node_modules'))\n    ) {\n      // Found the 'package.json' file or 'node_modules' dir; we're done\n      return dir;\n    }\n    if (prev === dir) {\n      // Got to the top\n      throw new Error(\n        'Could not find module root given file: \"' +\n          file +\n          '\". Do you have a `package.json` file? '\n      );\n    }\n    // Try the parent dir next\n    prev = dir;\n    dir = join(dir, '..');\n  }\n};\n","module.exports = require(\"fs\");","\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n","'use strict';\n/**\n * An interface for modeling and instantiating C-style data structures. This is\n * not a constructor per-say, but a constructor generator. It takes an array of\n * tuples, the left side being the type, and the right side being a field name.\n * The order should be the same order it would appear in the C-style struct\n * definition. It returns a function that can be used to construct an object that\n * reads and writes to the data structure using properties specified by the\n * initial field list.\n *\n * The only verboten field names are \"ref\", which is used used on struct\n * instances as a function to retrieve the backing Buffer instance of the\n * struct, and \"ref.buffer\" which contains the backing Buffer instance.\n *\n *\n * Example:\n *\n * ``` javascript\n * var ref = require('ref')\n * var Struct = require('ref-struct')\n *\n * // create the `char *` type\n * var charPtr = ref.refType(ref.types.char)\n * var int = ref.types.int\n *\n * // create the struct \"type\" / constructor\n * var PasswordEntry = Struct({\n *     'username': 'string'\n *   , 'password': 'string'\n *   , 'salt':     int\n * })\n *\n * // create an instance of the struct, backed a Buffer instance\n * var pwd = new PasswordEntry()\n * pwd.username = 'ricky'\n * pwd.password = 'rbransonlovesnode.js'\n * pwd.salt = (Math.random() * 1000000) | 0\n *\n * pwd.username // → 'ricky'\n * pwd.password // → 'rbransonlovesnode.js'\n * pwd.salt     // → 820088\n * ```\n */\n\n/**\n * Module dependencies.\n */\n\nvar util = require('util')\nvar assert = require('assert')\nvar debug = require('debug')('ref:struct')\n\n/**\n * Module exports.\n */\n\nmodule.exports = function (ref) {\n\n/**\n * The Struct \"type\" meta-constructor.\n */\n\nfunction Struct () {\n  debug('defining new struct \"type\"')\n\n  /**\n   * This is the \"constructor\" of the Struct type that gets returned.\n   *\n   * Invoke it with `new` to create a new Buffer instance backing the struct.\n   * Pass it an existing Buffer instance to use that as the backing buffer.\n   * Pass in an Object containing the struct fields to auto-populate the\n   * struct with the data.\n   */\n\n  function StructType (arg, data) {\n    if (!(this instanceof StructType)) {\n      return new StructType(arg, data)\n    }\n    debug('creating new struct instance')\n    var store\n    if (Buffer.isBuffer(arg)) {\n      debug('using passed-in Buffer instance to back the struct', arg)\n      assert(arg.length >= StructType.size, 'Buffer instance must be at least ' +\n          StructType.size + ' bytes to back this struct type')\n      store = arg\n      arg = data\n    } else {\n      debug('creating new Buffer instance to back the struct (size: %d)', StructType.size)\n      store = new Buffer(StructType.size)\n    }\n\n    // set the backing Buffer store\n    store.type = StructType\n    this['ref.buffer'] = store\n\n    if (arg) {\n      for (var key in arg) {\n        // hopefully hit the struct setters\n        this[key] = arg[key]\n      }\n    }\n    StructType._instanceCreated = true\n  }\n\n  // make instances inherit from the `proto`\n  StructType.prototype = Object.create(proto, {\n    constructor: {\n        value: StructType\n      , enumerable: false\n      , writable: true\n      , configurable: true\n    }\n  })\n\n  StructType.defineProperty = defineProperty\n  StructType.toString = toString\n  StructType.fields = {}\n\n  var opt = (arguments.length > 0 && arguments[1]) ? arguments[1] : {};\n  // Setup the ref \"type\" interface. The constructor doubles as the \"type\" object\n  StructType.size = 0\n  StructType.alignment = 0\n  StructType.indirection = 1\n  StructType.isPacked = opt.packed ? Boolean(opt.packed) : false\n  StructType.get = get\n  StructType.set = set\n\n  // Read the fields list and apply all the fields to the struct\n  // TODO: Better arg handling... (maybe look at ES6 binary data API?)\n  var arg = arguments[0]\n  if (Array.isArray(arg)) {\n    // legacy API\n    arg.forEach(function (a) {\n      var type = a[0]\n      var name = a[1]\n      StructType.defineProperty(name, type)\n    })\n  } else if (typeof arg === 'object') {\n    Object.keys(arg).forEach(function (name) {\n      var type = arg[name]\n      StructType.defineProperty(name, type)\n    })\n  }\n\n  return StructType\n}\n\n/**\n * The \"get\" function of the Struct \"type\" interface\n */\n\nfunction get (buffer, offset) {\n  debug('Struct \"type\" getter for buffer at offset', buffer, offset)\n  if (offset > 0) {\n    buffer = buffer.slice(offset)\n  }\n  return new this(buffer)\n}\n\n/**\n * The \"set\" function of the Struct \"type\" interface\n */\n\nfunction set (buffer, offset, value) {\n  debug('Struct \"type\" setter for buffer at offset', buffer, offset, value)\n  var isStruct = value instanceof this\n  if (isStruct) {\n    // optimization: copy the buffer contents directly rather\n    // than going through the ref-struct constructor\n    value['ref.buffer'].copy(buffer, offset, 0, this.size)\n  } else {\n    if (offset > 0) {\n      buffer = buffer.slice(offset)\n    }\n    new this(buffer, value)\n  }\n}\n\n/**\n * Custom `toString()` override for struct type instances.\n */\n\nfunction toString () {\n  return '[StructType]'\n}\n\n/**\n * Adds a new field to the struct instance with the given name and type.\n * Note that this function will throw an Error if any instances of the struct\n * type have already been created, therefore this function must be called at the\n * beginning, before any instances are created.\n */\n\nfunction defineProperty (name, type) {\n  debug('defining new struct type field', name)\n\n  // allow string types for convenience\n  type = ref.coerceType(type)\n\n  assert(!this._instanceCreated, 'an instance of this Struct type has already ' +\n      'been created, cannot add new \"fields\" anymore')\n  assert.equal('string', typeof name, 'expected a \"string\" field name')\n  assert(type && /object|function/i.test(typeof type) && 'size' in type &&\n      'indirection' in type\n      , 'expected a \"type\" object describing the field type: \"' + type + '\"')\n  assert(type.indirection > 1 || type.size > 0,\n      '\"type\" object must have a size greater than 0')\n  assert(!(name in this.prototype), 'the field \"' + name +\n      '\" already exists in this Struct type')\n\n  var field = {\n    type: type\n  }\n  this.fields[name] = field\n\n  // define the getter/setter property\n  var desc = { enumerable: true , configurable: true }\n  desc.get = function () {\n    debug('getting \"%s\" struct field (offset: %d)', name, field.offset)\n    return ref.get(this['ref.buffer'], field.offset, type)\n  }\n  desc.set = function (value) {\n    debug('setting \"%s\" struct field (offset: %d)', name, field.offset, value)\n    return ref.set(this['ref.buffer'], field.offset, value, type)\n  }\n\n  // calculate the new size and field offsets\n  recalc(this)\n\n  Object.defineProperty(this.prototype, name, desc)\n}\n\nfunction recalc (struct) {\n\n  // reset size and alignment\n  struct.size = 0\n  struct.alignment = 0\n\n  var fieldNames = Object.keys(struct.fields)\n\n  // first loop through is to determine the `alignment` of this struct\n  fieldNames.forEach(function (name) {\n    var field = struct.fields[name]\n    var type = field.type\n    var alignment = type.alignment || ref.alignof.pointer\n    if (type.indirection > 1) {\n      alignment = ref.alignof.pointer\n    }\n    if (struct.isPacked) {\n      struct.alignment = Math.min(struct.alignment || alignment, alignment)\n    } else {\n      struct.alignment = Math.max(struct.alignment, alignment)\n    }\n  })\n\n  // second loop through sets the `offset` property on each \"field\"\n  // object, and sets the `struct.size` as we go along\n  fieldNames.forEach(function (name) {\n    var field = struct.fields[name]\n    var type = field.type\n\n    if (null != type.fixedLength) {\n      // \"ref-array\" types set the \"fixedLength\" prop. don't treat arrays like one\n      // contiguous entity. instead, treat them like individual elements in the\n      // struct. doing this makes the padding end up being calculated correctly.\n      field.offset = addType(type.type)\n      for (var i = 1; i < type.fixedLength; i++) {\n        addType(type.type)\n      }\n    } else {\n      field.offset = addType(type)\n    }\n  })\n\n  function addType (type) {\n    var offset = struct.size\n    var align = type.indirection === 1 ? type.alignment : ref.alignof.pointer\n    var padding = struct.isPacked ? 0 : (align - (offset % align)) % align\n    var size = type.indirection === 1 ? type.size : ref.sizeof.pointer\n\n    offset += padding\n\n    if (!struct.isPacked) {\n      assert.equal(offset % align, 0, \"offset should align\")\n    }\n\n    // adjust the \"size\" of the struct type\n    struct.size = offset + size\n\n    // return the calulated offset\n    return offset\n  }\n\n  // any final padding?\n  var left = struct.size % struct.alignment\n  if (left > 0) {\n    debug('additional padding to the end of struct:', struct.alignment - left)\n    struct.size += struct.alignment - left\n  }\n}\n\n/**\n * this is the custom prototype of Struct type instances.\n */\n\nvar proto = {}\n\n/**\n * set a placeholder variable on the prototype so that defineProperty() will\n * throw an error if you try to define a struct field with the name \"buffer\".\n */\n\nproto['ref.buffer'] = ref.NULL\n\n/**\n * Flattens the Struct instance into a regular JavaScript Object. This function\n * \"gets\" all the defined properties.\n *\n * @api public\n */\n\nproto.toObject = function toObject () {\n  var obj = {}\n  Object.keys(this.constructor.fields).forEach(function (k) {\n    obj[k] = this[k]\n  }, this)\n  return obj\n}\n\n/**\n * Basic `JSON.stringify(struct)` support.\n */\n\nproto.toJSON = function toJSON () {\n  return this.toObject()\n}\n\n/**\n * `.inspect()` override. For the REPL.\n *\n * @api public\n */\n\nproto.inspect = function inspect () {\n  var obj = this.toObject()\n  // add instance's \"own properties\"\n  Object.keys(this).forEach(function (k) {\n    obj[k] = this[k]\n  }, this)\n  return util.inspect(obj)\n}\n\n/**\n * returns a Buffer pointing to this struct data structure.\n */\n\nproto.ref = function ref () {\n  return this['ref.buffer']\n}\n\nreturn Struct;\n\n};\n","\"use strict\";\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @api public\n  */\n\n\n  function disable() {\n    createDebug.enable('');\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;\n\n","'use strict';\n/**\n * Module dependencies.\n */\n\nconst Type = require('./type');\nconst assert = require('assert');\nconst debug = require('debug')('ffi:cif_var');\nconst ref = require('ref-napi');\nconst bindings = require('./bindings');\nconst POINTER_SIZE = ref.sizeof.pointer;\nconst ffi_prep_cif_var = bindings.ffi_prep_cif_var;\nconst FFI_CIF_SIZE = bindings.FFI_CIF_SIZE;\nconst FFI_DEFAULT_ABI = bindings.FFI_DEFAULT_ABI;\n  // status codes\nconst FFI_OK = bindings.FFI_OK;\nconst FFI_BAD_TYPEDEF = bindings.FFI_BAD_TYPEDEF;\nconst FFI_BAD_ABI = bindings.FFI_BAD_ABI;\n\n/**\n * JS wrapper for the `ffi_prep_cif_var` function.\n * Returns a Buffer instance representing a variadic `ffi_cif *` instance.\n */\n\nfunction CIF_var (rtype, types, numFixedArgs, abi) {\n  debug('creating `ffi_cif *` instance with `ffi_prep_cif_var()`');\n\n  // the return and arg types are expected to be coerced at this point...\n  assert(!!rtype, 'expected a return \"type\" object as the first argument');\n  assert(Array.isArray(types), 'expected an Array of arg \"type\" objects as the second argument');\n  assert(numFixedArgs >= 1, 'expected the number of fixed arguments to be at least 1');\n\n  // the buffer that will contain the return `ffi_cif *` instance\n  const cif = Buffer.alloc(FFI_CIF_SIZE);\n\n  const numTotalArgs = types.length;\n  const _argtypesptr = Buffer.alloc(numTotalArgs * POINTER_SIZE);\n  const _rtypeptr = Type(rtype);\n\n  for (let i = 0; i < numTotalArgs; i++) {\n    const ffiType = Type(types[i]);\n    _argtypesptr.writePointer(ffiType, i * POINTER_SIZE);\n  }\n\n  // prevent GC of the arg type and rtn type buffers (not sure if this is required)\n  cif.rtnTypePtr = _rtypeptr;\n  cif.argTypesPtr = _argtypesptr;\n\n  if (typeof abi === 'undefined') {\n    debug('no ABI specified (this is OK), using FFI_DEFAULT_ABI');\n    abi = FFI_DEFAULT_ABI;\n  }\n\n  const status = ffi_prep_cif_var(cif, numFixedArgs, numTotalArgs, _rtypeptr, _argtypesptr, abi);\n\n  if (status !== FFI_OK) {\n    switch (status) {\n      case FFI_BAD_TYPEDEF:\n      {\n        const err = new Error('ffi_prep_cif_var() returned an FFI_BAD_TYPEDEF error');\n        err.code = 'FFI_BAD_TYPEDEF';\n        err.errno = status;\n        throw err;\n      }\n      case FFI_BAD_ABI:\n      {\n        const err = new Error('ffi_prep_cif_var() returned an FFI_BAD_ABI error');\n        err.code = 'FFI_BAD_ABI';\n        err.errno = status;\n        throw err;\n      }\n      default:\n      {\n        const err = new Error('ffi_prep_cif_var() returned an error: ' + status);\n        err.errno = status;\n        throw err;\n      }\n    }\n  }\n\n  return cif;\n}\n\nmodule.exports = CIF_var;\n","'use strict';\n/**\n * Module dependencies.\n */\n\nconst ref = require('ref-napi');\nconst CIF = require('./cif');\nconst assert = require('assert');\nconst debug = require('debug')('ffi:Callback');\nconst _Callback = require('./bindings').Callback;\n\n// Function used to report errors to the current process event loop,\n// When user callback function gets gced.\nfunction errorReportCallback (err) {\n  if (err) {\n    process.nextTick(function () {\n      if (typeof err === 'string') {\n        throw new Error(err);\n      } else {\n        throw err;\n      }\n    })\n  }\n}\n\n/**\n * Turns a JavaScript function into a C function pointer.\n * The function pointer may be used in other C functions that\n * accept C callback functions.\n */\n\nfunction Callback (retType, argTypes, abi, func) {\n  debug('creating new Callback');\n\n  if (typeof abi === 'function') {\n    func = abi;\n    abi = undefined;\n  }\n\n  // check args\n  assert(!!retType, 'expected a return \"type\" object as the first argument');\n  assert(Array.isArray(argTypes), 'expected Array of arg \"type\" objects as the second argument');\n  assert.equal(typeof func, 'function', 'expected a function as the third argument');\n\n  // normalize the \"types\" (they could be strings, so turn into real type\n  // instances)\n  retType = ref.coerceType(retType);\n  argTypes = argTypes.map(ref.coerceType);\n\n  // create the `ffi_cif *` instance\n  const cif = CIF(retType, argTypes, abi);\n  const argc = argTypes.length;\n\n  const callback = _Callback(cif, retType.size, argc, errorReportCallback, (retval, params) => {\n    debug('Callback function being invoked')\n    try {\n      const args = [];\n      for (var i = 0; i < argc; i++) {\n        const type = argTypes[i];\n        const argPtr = params.readPointer(i * ref.sizeof.pointer, type.size);\n        argPtr.type = type;\n        args.push(argPtr.deref());\n      }\n\n      // Invoke the user-given function\n      const result = func.apply(null, args);\n      try {\n        ref.set(retval, 0, result, retType);\n      } catch (e) {\n        e.message = 'error setting return value - ' + e.message;\n        throw e;\n      }\n    } catch (e) {\n      return e;\n    }\n  });\n\n  return callback;\n}\n\nmodule.exports = Callback;\n","'use strict';\n/**\n * Module dependencies.\n */\n\nconst assert = require('assert');\nconst debug = require('debug')('ffi:_ForeignFunction');\nconst ref = require('ref-napi');\nconst bindings = require('./bindings');\nconst POINTER_SIZE = ref.sizeof.pointer;\nconst FFI_ARG_SIZE = bindings.FFI_ARG_SIZE;\n\n\nfunction ForeignFunction (cif, funcPtr, returnType, argTypes) {\n  debug('creating new ForeignFunction', funcPtr);\n\n  const numArgs = argTypes.length;\n  const argsArraySize = numArgs * POINTER_SIZE;\n\n  // \"result\" must point to storage that is sizeof(long) or larger. For smaller\n  // return value sizes, the ffi_arg or ffi_sarg integral type must be used to\n  // hold the return value\n  const resultSize = returnType.size >= ref.sizeof.long ? returnType.size : FFI_ARG_SIZE;\n  assert(resultSize > 0);\n\n  /**\n   * This is the actual JS function that gets returned.\n   * It handles marshalling input arguments into C values,\n   * and unmarshalling the return value back into a JS value\n   */\n\n  const proxy = function () {\n    debug('invoking proxy function');\n\n    if (arguments.length !== numArgs) {\n      throw new TypeError('Expected ' + numArgs +\n          ' arguments, got ' + arguments.length);\n    }\n\n    // storage buffers for input arguments and the return value\n    const result = Buffer.alloc(resultSize);\n    const argsList = Buffer.alloc(argsArraySize);\n\n    // write arguments to storage areas\n    let i;\n    try {\n      for (i = 0; i < numArgs; i++) {\n        const argType = argTypes[i];\n        const val = arguments[i];\n        const valPtr = ref.alloc(argType, val);\n        argsList.writePointer(valPtr, i * POINTER_SIZE);\n      }\n    } catch (e) {\n      // counting arguments from 1 is more human readable\n      i++;\n      e.message = 'error setting argument ' + i + ' - ' + e.message;\n      throw e;\n    }\n\n    // invoke the `ffi_call()` function\n    bindings.ffi_call(cif, funcPtr, result, argsList);\n\n    result.type = returnType;\n    return result.deref();\n  };\n\n  /**\n   * The asynchronous version of the proxy function.\n   */\n\n  proxy.async = function () {\n    debug('invoking async proxy function');\n\n    const argc = arguments.length;\n    if (argc !== numArgs + 1) {\n      throw new TypeError('Expected ' + (numArgs + 1) +\n          ' arguments, got ' + argc);\n    }\n\n    const callback = arguments[argc - 1];\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected a callback function as argument number: ' +\n          (argc - 1));\n    }\n\n    // storage buffers for input arguments and the return value\n    const result = Buffer.alloc(resultSize);\n    const argsList = Buffer.alloc(argsArraySize);\n\n    // write arguments to storage areas\n    let i;\n    try {\n      for (i = 0; i < numArgs; i++) {\n        const argType = argTypes[i];\n        const val = arguments[i];\n        const valPtr = ref.alloc(argType, val);\n        argsList.writePointer(valPtr, i * POINTER_SIZE);\n      }\n    } catch (e) {\n      e.message = 'error setting argument ' + i + ' - ' + e.message;\n      return process.nextTick(callback.bind(null, e));\n    }\n\n    // invoke the `ffi_call()` function asynchronously\n    bindings.ffi_call_async(cif, funcPtr, result, argsList, function (err) {\n      // make sure that the 4 Buffers passed in above don't get GC'd while we're\n      // doing work on the thread pool...\n      [ cif, funcPtr, argsList ].map(() => {});\n\n      // now invoke the user-provided callback function\n      if (err) {\n        callback(err);\n      } else {\n        result.type = returnType;\n        callback(null, result.deref());\n      }\n    });\n  }\n\n  return proxy;\n}\n\nmodule.exports = ForeignFunction;\n","'use strict';\n/**\n * Module dependencies.\n */\n\nconst CIF_var = require('./cif_var');\nconst Type = require('./type');\nconst _ForeignFunction = require('./_foreign_function');\nconst assert = require('assert');\nconst debug = require('debug')('ffi:VariadicForeignFunction');\nconst ref = require('ref-napi');\nconst bindings = require('./bindings');\nconst POINTER_SIZE = ref.sizeof.pointer;\nconst FFI_ARG_SIZE = bindings.FFI_ARG_SIZE;\n\n/**\n * For when you want to call to a C function with variable amount of arguments.\n * i.e. `printf()`.\n *\n * This function takes care of caching and reusing ForeignFunction instances that\n * contain the same ffi_type argument signature.\n */\n\nfunction VariadicForeignFunction (funcPtr, returnType, fixedArgTypes, abi) {\n  debug('creating new VariadicForeignFunction', funcPtr);\n\n  // the cache of ForeignFunction instances that this\n  // VariadicForeignFunction has created so far\n  const cache = {};\n\n  // check args\n  assert(Buffer.isBuffer(funcPtr), 'expected Buffer as first argument');\n  assert(!!returnType, 'expected a return \"type\" object as the second argument');\n  assert(Array.isArray(fixedArgTypes), 'expected Array of arg \"type\" objects as the third argument');\n\n  const numFixedArgs = fixedArgTypes.length;\n\n  // normalize the \"types\" (they could be strings,\n  // so turn into real type instances)\n  fixedArgTypes = fixedArgTypes.map(ref.coerceType);\n\n  // get the names of the fixed arg types\n  const fixedKey = fixedArgTypes.map(function (type) {\n    return getId(type);\n  });\n\n\n  // what gets returned is another function that needs to be invoked with the rest\n  // of the variadic types that are being invoked from the function.\n  function variadic_function_generator () {\n    debug('variadic_function_generator invoked');\n\n    // first get the types of variadic args we are working with\n    const argTypes = fixedArgTypes.slice();\n    let key = fixedKey.slice();\n\n    for (let i = 0; i < arguments.length; i++) {\n      const type = ref.coerceType(arguments[i]);\n      argTypes.push(type);\n\n      const ffi_type = Type(type);\n      assert(ffi_type.name);\n      key.push(getId(type));\n    }\n\n    // now figure out the return type\n    const rtnType = ref.coerceType(variadic_function_generator.returnType);\n    const rtnName = getId(rtnType);\n    assert(rtnName);\n\n    // first let's generate the key and see if we got a cache-hit\n    key = rtnName + key.join('');\n\n    let func = cache[key];\n    if (func) {\n      debug('cache hit for key:', key);\n    } else {\n      // create the `ffi_cif *` instance\n      debug('creating the variadic ffi_cif instance for key:', key);\n      const cif = CIF_var(returnType, argTypes, numFixedArgs, abi);\n      func = cache[key] = _ForeignFunction(cif, funcPtr, rtnType, argTypes);\n    }\n    return func;\n  }\n\n  // set the return type. we set it as a property of the function generator to\n  // allow for monkey patching the return value in the very rare case where the\n  // return type is variadic as well\n  variadic_function_generator.returnType = returnType;\n\n  return variadic_function_generator;\n}\n\nmodule.exports = VariadicForeignFunction;\n\nconst idKey = '_ffiId';\nlet counter = 0;\nfunction getId (type) {\n  if (!type.hasOwnProperty(idKey)) {\n    type[idKey] = ((counter++*0x10000)|0).toString(16);\n  }\n  return type[idKey];\n}\n","/*\n *  gemstone: GemStone/S 64 Bit IDE for Visual Studio Code\n */\n\nimport * as vscode from 'vscode';\nimport { LoginsProvider } from './LoginProvider';\nimport { Login } from './Login';\nimport { SessionsProvider } from './SessionProvider';\nimport { Session } from './Session';\n\nvar outputChannel: vscode.OutputChannel;\nvar sessionId: number = 0;\nconst sessions: Session[] = [];\nvar sessionsProvider: SessionsProvider;\nvar statusBarItem: vscode.StatusBarItem;\n\nexport function activate(context: vscode.ExtensionContext) {\n\t// console.log(context.globalStoragePath);\n\tcreateOutputChannel();\n\tcreateViewForLoginList();\n\tcreateViewForSessionList();\n\tcreateStatusBarItem(context);\n\tcreateLoginCommandHandler(context);\n\tcreateLogoutCommandHandler(context);\n\tcreateDisplayItCommandHandler(context);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n\n// DisplayIt command handler\nconst createDisplayItCommandHandler = (context: vscode.ExtensionContext) => {\n\tconst displayIt = (textEditor: vscode.TextEditor, edit: vscode.TextEditorEdit, args: any[]) => {\n\t\tif (sessionId === 0) {\n\t\t\tvscode.window.showErrorMessage('No GemStone session!');\n\t\t\treturn;\n\t\t}\n\t\tvar selection: vscode.Selection = textEditor.selection;\n\t\tif (selection.isEmpty) {\n\t\t\tvscode.window.showInformationMessage('Nothing selected! Use <Ctrl>+<L> (<Cmd>+<L> on Mac) to select line.');\n\t\t\treturn;\n\t\t}\n\t\tconst text = textEditor.document.getText(selection);\n\t\tconst count = (text.match(/\\'/g) || []).length;\n\t\tif (count % 2 === 1) {\n\t\t\tvscode.window.showWarningMessage('Odd number of quote characters means an unterminated string!');\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tconst result = ' ' + sessions[sessionId - 1].stringFromExecuteString(text);\n\t\t\ttextEditor.edit((editBuilder: vscode.TextEditorEdit) => {\n\t\t\t\teditBuilder.insert(selection.end, result);\n\t\t\t}).then(success => {\n\t\t\t\tselection = new vscode.Selection(selection.end.line, selection.end.character, \n\t\t\t\t\tselection.end.line, selection.end.character + result.length);\n\t\t\t\t\ttextEditor.selection = selection;\n\t\t\t\t});\n\t\t} catch(e) {\n\t\t\tvscode.window.showErrorMessage(e.message);\n\t\t\tconsole.error(e.message);\n\t\t}\n\t};\n\tconst disposable = vscode.commands.registerTextEditorCommand('gemstone.displayIt', displayIt);\n\tcontext.subscriptions.push(disposable);\n};\n\n// Login command handler\nconst createLoginCommandHandler = (context: vscode.ExtensionContext) => {\n\tconst disposable = vscode.commands.registerCommand('gemstone.login', (login: Login) => {\n\t\tvar session;\n\t\ttry {\n\t\t\tsession = new Session(login, sessions.length + 1);\n\t\t} catch(error) {\n\t\t\tvscode.window.showErrorMessage(typeof error);\n\t\t\tconsole.error(error);\n\t\t\treturn;\n\t\t}\n\t\tsessions.push(session);\n\t\tsessionsProvider.refresh();\n\t\toutputChannel.appendLine('Login ' + session.description);\n\t\tsessionId = session.sessionId;\n\t\tstatusBarItem.text = `GemStone session: ${sessionId}`;\n\t});\n\tcontext.subscriptions.push(disposable);\n};\n\n// Logout command handler\nconst createLogoutCommandHandler = (context: vscode.ExtensionContext) => {\n\tconst disposable = vscode.commands.registerCommand('gemstone.logout', (session: Session) => {\n\t\toutputChannel.appendLine('Logout ' + session.description);\n\t\tsession.logout();\n\t\tsessionsProvider.refresh();\n\t\tif (sessionId === session.sessionId) {\n\t\t\tsessionId = 0;\n\t\t\tstatusBarItem.text = 'GemStone session: none';\n\t\t}\n\t});\n\tcontext.subscriptions.push(disposable);\n};\n\n// Output Channel to show information\nconst createOutputChannel = () => {\n\toutputChannel = vscode.window.createOutputChannel('GemStone');\n\toutputChannel.appendLine('Activated GemStone extension');\n};\n\n// Status bar item\nconst createStatusBarItem = (context: vscode.ExtensionContext) => {\n\tstatusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 100);\n\tstatusBarItem.text = 'GemStone session: none';\n\tstatusBarItem.command = 'gemstone.showSessionId';\n\tstatusBarItem.show();\n\tcontext.subscriptions.push(vscode.commands.registerCommand('gemstone.showSessionId', () => {\n\t\tvscode.window.showInformationMessage(`GemStone session: ${sessionId ? sessionId : 'none'}`);\n\t}));\n};\n\n// View for Login list\nconst createViewForLoginList = () => {\n\tconst loginsProvider = new LoginsProvider();\n\tvscode.window.registerTreeDataProvider('gemstone-logins', loginsProvider);\n};\n\n// View for Session list\nconst createViewForSessionList = () => {\n\tsessionsProvider = new SessionsProvider(sessions);\n\tvscode.window.registerTreeDataProvider('gemstone-sessions', sessionsProvider);\n    vscode.commands.registerCommand(\"gemstone-sessions.selectSession\", (session:Session) => {\n\t\tsessionId = session.sessionId;\n\t\tstatusBarItem.text = `GemStone session: ${sessionId}`;\n\t});\n};\n","import * as vscode from 'vscode';\nimport * as path from 'path';\nimport { Login } from './Login';\n\nexport class LoginsProvider implements vscode.TreeDataProvider<Login> {\n\n\tprivate _onDidChangeTreeData: vscode.EventEmitter<Login | undefined> = new vscode.EventEmitter<Login | undefined>();\n\treadonly onDidChangeTreeData: vscode.Event<Login | undefined> = this._onDidChangeTreeData.event;\n\n\tconstructor() {\n\t}\n\n\trefresh(): void {\n\t\tthis._onDidChangeTreeData.fire();\n\t}\n\n\tgetTreeItem(element: Login): vscode.TreeItem {\n\t\treturn element;\n\t}\n\n\tgetChildren(element?: Login): Thenable<Login[]> {\n\t\tif (element) {\t// a Login does not have children\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\t\tconst config = vscode.workspace.getConfiguration('gemstone');\n\t\tconst logins = config.logins.map((login: any) => {\n\t\t\treturn new Login( \n\t\t\t\tlogin.label, \n\t\t\t\tlogin.library, \n\t\t\t\tlogin.library.split('-')[1],\n\t\t\t\tlogin.gem_host, \n\t\t\t\tlogin.stone, \n\t\t\t\tlogin.gs_user, \n\t\t\t\tlogin.gs_password, \n\t\t\t\tlogin.netldi, \n\t\t\t\tlogin.host_user, \n\t\t\t\tlogin.host_password\n\t\t\t);\n\t\t});\n\t\tif (!config || !logins || logins.length === 0) {\n\t\t\tvscode.window.showInformationMessage('No GemStone Logins have been defined in Settings');\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\t\treturn Promise.resolve(logins);\n\t}\n\n}\n","/*\n * Login.ts\n */\n\nimport * as vscode from 'vscode';\nimport * as path from 'path';\n\nexport class Login extends vscode.TreeItem {\n\tconstructor(\n\t\tpublic readonly label: any,\n\t\tpublic readonly library: string,\n\t\tpublic readonly version: string,\n\t\tpublic readonly gem_host: string,\n\t\tpublic readonly stone: string,\n\t\tpublic readonly gs_user: string,\n\t\tpublic readonly gs_password: string,\n\t\tpublic readonly netldi: string,\n\t\tpublic readonly host_user: string,\n\t\tpublic readonly host_password: string\n\t) {\n\t\tsuper(label, vscode.TreeItemCollapsibleState.None);\n\t}\n\n\tget tooltip(): string {\n\t\treturn `${this.gs_user} in ${this.stone} (${this.version}) on ${this.gem_host}`;\n\t}\n\n\tget description(): string {\n\t\treturn this.tooltip;\n\t}\n\n\ticonPath = {\n\t\tlight: path.join(__filename, '..', '..', 'resources', 'light', 'Login.svg'),\n\t\tdark: path.join(__filename, '..', '..', 'resources', 'dark', 'Login.svg')\n\t};\n}\n","import * as vscode from 'vscode';\nimport { Session } from './Session';\n\nexport class SessionsProvider implements vscode.TreeDataProvider<Session> {\n\tprivate sessions: Session[];\n\tprivate _onDidChangeTreeData: vscode.EventEmitter<Session | undefined> = new vscode.EventEmitter<Session | undefined>();\n\treadonly onDidChangeTreeData: vscode.Event<Session | undefined> = this._onDidChangeTreeData.event;\n\n\tconstructor(list: Session[]) {\n\t\tthis.sessions = list;\n\t}\n\n\trefresh(): void {\n\t\tthis._onDidChangeTreeData.fire();\n\t}\n\n\tgetTreeItem(element: Session): vscode.TreeItem {\n\t\treturn element;\n\t}\n\n\tgetChildren(element?: Session): Thenable<Session[]> {\n\t\tif (element) {\t// a Session does not have children\n\t\t\treturn Promise.resolve([]);\n\t\t}\n\t\treturn Promise.resolve(this.sessions.filter(each => each.isLoggedIn()));\n\t}\n}\n","/*\n *\tSession.ts\n */\n\nimport * as vscode from 'vscode';\nimport * as path from 'path';\nimport { Login } from './Login';\nconst { GciSession } = require('gci-js');\n\nexport class Session extends vscode.TreeItem {\n\tgciSession: any;\n\tconstructor(\n\t\tpublic readonly login: Login,\n\t\tpublic readonly sessionId: number\n\t) {\n\t\tsuper(login.label, vscode.TreeItemCollapsibleState.None);\n\t\tthis.gciSession = new GciSession(login);\n\t\tthis.command = {\n\t\t\tcommand: 'gemstone-sessions.selectSession',\n\t\t\ttitle: 'Select session',\n\t\t\targuments: [this]\n\t\t};\n\t}\n\n\tstringFromExecuteString(input: string): string {\n\t\tconst myString = '| x | x := [' + input + '] value printString. ' + \n\t\t\t'x size > 1020 ifTrue: [x := (x copyFrom: 1 to: 1020) , \\'...\\']. x';\n\t\treturn this.gciSession.executeFetchBytes(myString, 1024);\n\t}\n\n\tget tooltip(): string {\n\t\treturn this.description;\n\t}\n\n\tget description(): string {\n\t\treturn `${this.sessionId}: ${this.login.gs_user} in ${this.login.stone} (${this.login.version}) on ${this.login.gem_host}`;\n\t}\n\n\tisLoggedIn() {\n\t\treturn this.gciSession.session !== 0;\n\t}\n\n\tlogout() {\n\t\tthis.gciSession.logout();\n\t}\n\n\ticonPath = {\n\t\tlight: path.join(__filename, '..', '..', 'resources', 'light', 'Login.svg'),\n\t\tdark: path.join(__filename, '..', '..', 'resources', 'dark', 'Login.svg')\n\t};\n}\n","/*\n *  index.js\n */\n\nmodule.exports = require(\"./GciSession\");\n","/*\n *  GciSession.js\n *\n *  GciSession provides a wrapper around GciLibrary\n */\n\nconst { GciLibrary, GciErrSType, OOP_ILLEGAL, OOP_NIL, OOP_CLASS_STRING } = require(\"./GciLibrary\");\n\nclass GciSession {\n    constructor(login) {\n        this.gci = GciLibrary(login.library);\n        this.error = new GciErrSType();\n        const stoneNRS = '!tcp@localhost#server!' + login.stone;\n        const gemNRS = '!tcp@' + login.gem_host + '#netldi:' + login.netldi + '#task!gemnetobject';\n        this.session = this.gci.GciTsLogin(\n            stoneNRS,               // const char *StoneNameNrs\n            login.host_user,        // const char *HostUserId\n            login.host_password,    // const char *HostPassword\n            false,                  // BoolType hostPwIsEncrypted\n            gemNRS,                 // const char *GemServiceNrs\n            login.gs_user,          // const char *gemstoneUsername\n            login.gs_password,      // const char *gemstonePassword\n            0,                      // unsigned int loginFlags (per GCI_LOGIN* in gci.ht)\n            0,                      // int haltOnErrNum\n            this.error.ref()        // GciErrSType *err\n        );\n        if (this.session === 0) {\n            throw new Error(this.error.message());\n        }\n    }\n\n    abort() {\n        if (!this.gci.GciTsAbort(this.session, this.error.ref())) {\n            throw new Error(this.error.message());\n        }\n    }\n\n    begin() {\n        if (!this.gci.GciTsBegin(this.session, this.error.ref())) {\n            throw new Error(this.error.message());\n        }\n    }\n\n    commit() {\n        if (!this.gci.GciTsCommit(this.session, this.error.ref())) {\n            throw new Error(this.error.message());\n        }\n    }\n\n    execute(string) {\n        const oop = this.gci.GciTsExecute_(this.session, string, string.length, OOP_CLASS_STRING, \n            OOP_ILLEGAL, OOP_NIL, 0, 0, this.error.ref());\n        if (oop === OOP_ILLEGAL) {\n            throw new Error(this.error.message());\n        }\n        return oop;\n    }\n\n    executeFetchBytes(string, expectedSize) {\n        const buffer = Buffer.alloc(expectedSize);\n        const actualSize = this.gci.GciTsExecuteFetchBytes(this.session, string, string.length, OOP_CLASS_STRING, \n            OOP_ILLEGAL, OOP_NIL, buffer, buffer.length, this.error.ref());\n        if (actualSize === -1) {\n            throw new Error(this.error.message());\n        }\n        return buffer.toString('utf8', 0, actualSize);\n    }\n\n    fetchClass(oop) {\n        const classOop = this.gci.GciTsFetchClass(this.session, oop, this.error.ref());\n        if (classOop === OOP_ILLEGAL) {\n            throw new Error(this.error.message());\n        }\n        return classOop;\n    }\n\n    fetchSize(oop) {\n        const size = this.gci.GciTsFetchSize(this.session, oop, this.error.ref());\n        if (size === -1) {\n            throw new Error(this.error.message());\n        }\n        return size;\n    }\n\n    fetchVaryingSize(oop) {\n        const size = this.gci.GciTsFetchVaryingSize(this.session, oop, this.error.ref());\n        if (size === -1) {\n            throw new Error(this.error.message());\n        }\n        return size;\n    }\n\n    hardBreak() {\n        if (!this.gci.GciTsBreak(this.session, true, this.error.ref())) {\n            throw new Error(this.error.message());\n        }\n    }\n\n    isCallInProgress() {\n        const flag = this.gci.GciTsCallInProgress(this.session, this.error.ref());\n        if (flag === -1) {\n            throw new Error(this.error.message());\n        }\n        return flag === 1;\n    }\n\n    isKindOf(objectOop, classOop) {\n        const flag = this.gci.GciTsIsKindOf(this.session, objectOop, classOop, this.error.ref());\n        if (flag === -1) {\n            throw new Error(this.error.message());\n        }\n        return flag === 1;\n    }\n\n    logout() {\n        if (!this.gci.GciTsLogout(this.session, this.error.ref())) {\n            throw new Error(this.error.message());\n        }\n        this.session = 0;\n    }\n\n    perform(receiver, selector, oopArray) {\n        const args = Buffer.alloc(80);\n        var i;\n        for (i = 0; i < 10; i++) {\n            args.writeIntLE(oopArray[i], i * 8, 6);\n        }\n        const oop = this.gci.GciTsPerform(this.session, receiver, OOP_ILLEGAL, selector, args, \n            oopArray.length, 0, 0, this.error.ref());\n        if (oop === OOP_ILLEGAL) {\n            throw new Error(this.error.message());\n        }\n        return oop;\n    }\n\n    performFetchBytes(receiver, selector, oopArray, expectedSize) {\n        const args = Buffer.alloc(80);\n        var i;\n        for (i = 0; i < 10; i++) {\n            args.writeIntLE(oopArray[i], i * 8, 6);\n        }\n        const buffer = Buffer.alloc(expectedSize + 10);\n        const actualSize = this.gci.GciTsPerformFetchBytes(this.session, receiver, selector, \n            args, oopArray.length, buffer, buffer.length, this.error.ref());\n        if (actualSize === -1) {\n            throw new Error(this.error.message());\n        }\n        if (actualSize > expectedSize) {\n            throw new Error('Actual size of ' + actualSize.toString() + \n                ' exceeded buffer size of ' + expectedSize.toString());\n        }\n        return buffer.toString('utf8', 0, actualSize);\n    }\n\n    resolveSymbol(string, symbolList = OOP_NIL) {\n        const oop = this.gci.GciTsResolveSymbol(this.session, string, symbolList, this.error.ref());\n        if (oop === OOP_ILLEGAL) {\n            throw new Error('Symbol not found!');\n        }\n        return oop;\n    }\n\n    softBreak() {\n        if (!this.gci.GciTsBreak(this.session, false, this.error.ref())) {\n            throw new Error(this.error.message());\n        }\n    }\n\n    version() {\n        const maxStringLength = 200;\n        const theStringBuffer = Buffer.alloc(maxStringLength);\n        const result = this.gci.GciTsVersion(theStringBuffer, maxStringLength);\n        var theString = theStringBuffer.toString('utf-8');\n        const terminatingNullPos = theString.indexOf('\\u0000');\n        if (terminatingNullPos >= 0) {theString = theString.substr(0, terminatingNullPos);}\n        if (result !== 3) {\n            throw new Error('GciTsVersion() returned ' + result.toString());\n        }\n        return theString;\n    }\n\n    trace(level) {\n        const flag = this.gci.GciTsGemTrace(this.session, level, this.error.ref());\n        if (flag === -1) {\n            throw new Error(this.error.message());\n        }\n        return flag;\n    }\n}\n\nmodule.exports = { GciSession, };\n","/*\n *  GciLibrary.js\n */\n\nconst FFI = require('ffi-napi');\n\nconst OOP_ILLEGAL = 1;\nconst OOP_NIL = 20;\nconst OOP_CLASS_STRING = 74753;\n\nconst GciSessionType = 'int64';\nconst OopType = 'int64';\n\nclass GciErrSType {       // gci.ht \n    constructor() { this.buffer = Buffer.alloc(2200);   }   // 2163 plus some padding\n    ref()       { return this.buffer;                   }\n    category()  { return this.buffer.readIntLE(  0, 6); }   // size is actually 8 bytes, but Buffer only supports 6 bytes before Node.js v12.0.0\n    context()   { return this.buffer.readIntLE(  8, 6); }\n    exception() { return this.buffer.readIntLE( 16, 6); }\n    // args() an array of 10 OopType values\n    number()    { return this.buffer.readIntLE(104, 4); }\n    argCount()  { return this.buffer.readIntLE(108, 4); }\n    fatal()     { return this.buffer.readIntLE(112, 1); }\n    message()   { return this.buffer.toString('utf8',  113, 1025).split('\\0').shift() }\n    reason()    { return this.buffer.toString('utf8', 1138, 1025).split('\\0').shift() }\n}\n\nGciLibrary = (path) => {\n    return FFI.Library(path, {\n        'GciI32ToOop'               : [ OopType,    [ 'int'] ], \n        'GciTsAbort'                : [ 'bool',     [ GciSessionType, 'pointer' ] ],\n        'GciTsBegin'                : [ 'bool',     [ GciSessionType, 'pointer' ] ],\n        'GciTsBreak'                : [ 'bool',     [ GciSessionType, 'bool', 'pointer' ] ],\n        'GciTsCommit'               : [ 'bool',     [ GciSessionType, 'pointer' ] ],\n        'GciTsCallInProgress'       : [ 'int',      [ GciSessionType, 'pointer' ] ],\n        'GciTsCharToOop'            : [ OopType,    [ 'uint' ] ],\n        'GciTsDoubleToSmallDouble'  : [ OopType,    [ 'double'] ], \n        'GciTsExecute'              : [ OopType,    [ GciSessionType, 'string', OopType, OopType, OopType, 'int', 'uint16', 'pointer' ] ],\n        'GciTsExecute_'             : [ OopType,    [ GciSessionType, 'string', 'int64', OopType, OopType, OopType, 'int', 'uint16', 'pointer' ] ],\n        'GciTsExecuteFetchBytes'    : [ 'int',      [ GciSessionType, 'string', 'int64', OopType, OopType, OopType, 'pointer', 'uint16', 'pointer' ] ],\n        'GciTsFetchClass'           : [ OopType,    [ GciSessionType, OopType, 'pointer' ] ],\n        'GciTsFetchSize'            : [ 'int64',    [ GciSessionType, OopType, 'pointer' ] ],\n        'GciTsFetchVaryingSize'     : [ 'int64',    [ GciSessionType, OopType, 'pointer' ] ],\n        'GciTsGemTrace'             : [ 'int',      [ GciSessionType, 'int', 'pointer' ] ],\n        'GciTsIsKindOf'             : [ 'int',      [ GciSessionType, OopType, OopType, 'pointer' ] ],\n        'GciTsLogin'                : [ GciSessionType, [ \n            'string', // const char *StoneNameNrs\n            'string', // const char *HostUserId\n            'string', // const char *HostPassword\n            'bool',   // BoolType hostPwIsEncrypted\n            'string', // const char *GemServiceNrs\n            'string', // const char *gemstoneUsername\n            'string', // const char *gemstonePassword\n            'uint',   // unsigned int loginFlags (per GCI_LOGIN* in gci.ht)\n            'int',    // int haltOnErrNum\n            'pointer' // GciErrSType *err\n        ] ],\n        'GciTsLogout'               : [ 'bool',     [ GciSessionType, 'pointer' ] ],\n        'GciTsOopIsSpecial'         : [ 'bool',     [ OopType ] ],\n        'GciTsOopToChar'            : [ 'int',      [ OopType ] ],\n        'GciTsPerform'              : [ OopType,    [ GciSessionType, OopType, OopType, 'string', 'pointer', 'int', 'int', 'uint16', 'pointer' ] ],\n        'GciTsPerformFetchBytes'    : [ OopType,    [ GciSessionType, OopType, 'string', 'pointer', 'int', 'pointer', 'uint16', 'pointer' ] ],\n        'GciTsResolveSymbol'        : [ OopType,    [ OopType, 'string', OopType, 'pointer' ] ],\n        'GciTsSessionIsRemote'      : [ 'int',      [ GciSessionType ] ],\n        'GciTsVersion'              : [ 'uint',     [ 'string', 'size_t' ] ],\n    });\n}\n\nmodule.exports = { GciLibrary, GciErrSType, OOP_ILLEGAL, OOP_NIL, OOP_CLASS_STRING };\n","'use strict';\n\n/**\n * Module dependencies.\n */\n\nconst ref = require('ref-napi');\nconst assert = require('assert');\nconst debug = require('debug')('ffi:ffi');\nconst Struct = require('ref-struct-di')(ref);\nconst bindings = require('./bindings');\n\n/**\n * Export some of the properties from the \"bindings\" file.\n */\n\n['FFI_TYPES',\n 'FFI_OK', 'FFI_BAD_TYPEDEF', 'FFI_BAD_ABI',\n 'FFI_DEFAULT_ABI', 'FFI_FIRST_ABI', 'FFI_LAST_ABI', 'FFI_SYSV', 'FFI_UNIX64',\n 'FFI_WIN64', 'FFI_VFP', 'FFI_STDCALL', 'FFI_THISCALL', 'FFI_FASTCALL',\n 'RTLD_LAZY', 'RTLD_NOW', 'RTLD_LOCAL', 'RTLD_GLOBAL', 'RTLD_NOLOAD',\n 'RTLD_NODELETE', 'RTLD_FIRST', 'RTLD_NEXT', 'RTLD_DEFAULT', 'RTLD_SELF',\n 'RTLD_MAIN_ONLY', 'FFI_MS_CDECL'].forEach(prop => {\n  if (!bindings.hasOwnProperty(prop)) {\n    return debug('skipping exporting of non-existant property', prop);\n  }\n  const desc = Object.getOwnPropertyDescriptor(bindings, prop);\n  Object.defineProperty(exports, prop, desc);\n});\n\n/**\n * Set the `ffi_type` property on the built-in types.\n */\n\nObject.keys(bindings.FFI_TYPES).forEach(name => {\n  const type = bindings.FFI_TYPES[name];\n  type.name = name;\n  if (name === 'pointer')\n    return; // there is no \"pointer\" type...\n  ref.types[name].ffi_type = type;\n});\n\n// make `size_t` use the \"ffi_type_pointer\"\nref.types.size_t.ffi_type = bindings.FFI_TYPES.pointer;\n\n// make `Utf8String` use \"ffi_type_pointer\"\nconst CString = ref.types.CString || ref.types.Utf8String;\nCString.ffi_type = bindings.FFI_TYPES.pointer;\n\n// make `Object` use the \"ffi_type_pointer\"\nref.types.Object.ffi_type = bindings.FFI_TYPES.pointer;\n\n// libffi is weird when it comes to long data types (defaults to 64-bit),\n// so we emulate here, since some platforms have 32-bit longs and some\n// platforms have 64-bit longs.\nswitch (ref.sizeof.long) {\n  case 4:\n    ref.types.ulong.ffi_type = bindings.FFI_TYPES.uint32;\n    ref.types.long.ffi_type = bindings.FFI_TYPES.int32;\n    break;\n  case 8:\n    ref.types.ulong.ffi_type = bindings.FFI_TYPES.uint64;\n    ref.types.long.ffi_type = bindings.FFI_TYPES.int64;\n    break;\n  default:\n    throw new Error('unsupported \"long\" size: ' + ref.sizeof.long);\n}\n\n/**\n * Alias the \"ref\" types onto ffi's exports, for convenience...\n */\n\nexports.types = ref.types;\n\n// Include our other modules\nexports.version = bindings.version;\nexports.CIF = require('./cif');\nexports.CIF_var = require('./cif_var');\nexports.Function = require('./function');\nexports.ForeignFunction = require('./foreign_function');\nexports.VariadicForeignFunction = require('./foreign_function_var');\nexports.DynamicLibrary = require('./dynamic_library');\nexports.Library = require('./library');\nexports.Callback = require('./callback');\nexports.errno = require('./errno');\nexports.ffiType = require('./type');\n\n// the shared library extension for this platform\nexports.LIB_EXT = exports.Library.EXT;\n\n// the FFI_TYPE struct definition\nexports.FFI_TYPE = exports.ffiType.FFI_TYPE;\n","\"use strict\";\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n","\"use strict\";\n\n/**\n * Module dependencies.\n */\nvar tty = require('tty');\n\nvar util = require('util');\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  var supportsColor = require('supports-color');\n\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];\n  }\n} catch (error) {} // Swallow - we only care if `supports-color` is available; it doesn't have to be.\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // Camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  }); // Coerce string value into JS value\n\n  var val = process.env[key];\n\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true;\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false;\n  } else if (val === 'null') {\n    val = null;\n  } else {\n    val = Number(val);\n  }\n\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\n}\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var name = this.namespace,\n      useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = \"\\x1B[3\" + (c < 8 ? c : '8;5;' + c);\n    var prefix = \"  \".concat(colorCode, \";1m\").concat(name, \" \\x1B[0m\");\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + \"\\x1B[0m\");\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  }\n\n  return new Date().toISOString() + ' ';\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env.DEBUG = namespaces;\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts).replace(/\\s*\\n\\s*/g, ' ');\n};\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\n\nformatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","\n/**\n * Module dependencies.\n */\n\nvar sep = require('path').sep || '/';\n\n/**\n * Module exports.\n */\n\nmodule.exports = fileUriToPath;\n\n/**\n * File URI to Path function.\n *\n * @param {String} uri\n * @return {String} path\n * @api public\n */\n\nfunction fileUriToPath (uri) {\n  if ('string' != typeof uri ||\n      uri.length <= 7 ||\n      'file://' != uri.substring(0, 7)) {\n    throw new TypeError('must pass in a file:// URI to convert to a file path');\n  }\n\n  var rest = decodeURI(uri.substring(7));\n  var firstSlash = rest.indexOf('/');\n  var host = rest.substring(0, firstSlash);\n  var path = rest.substring(firstSlash + 1);\n\n  // 2.  Scheme Definition\n  // As a special case, <host> can be the string \"localhost\" or the empty\n  // string; this is interpreted as \"the machine from which the URL is\n  // being interpreted\".\n  if ('localhost' == host) host = '';\n\n  if (host) {\n    host = sep + sep + host;\n  }\n\n  // 3.2  Drives, drive letters, mount points, file system root\n  // Drive letters are mapped into the top of a file URI in various ways,\n  // depending on the implementation; some applications substitute\n  // vertical bar (\"|\") for the colon after the drive letter, yielding\n  // \"file:///c|/tmp/test.txt\".  In some cases, the colon is left\n  // unchanged, as in \"file:///c:/tmp/test.txt\".  In other cases, the\n  // colon is simply omitted, as in \"file:///c/tmp/test.txt\".\n  path = path.replace(/^(.+)\\|/, '$1:');\n\n  // for Windows, we need to invert the path separators from what a URI uses\n  if (sep == '\\\\') {\n    path = path.replace(/\\//g, '\\\\');\n  }\n\n  if (/^.+\\:/.test(path)) {\n    // has Windows drive at beginning of path\n  } else {\n    // unix path…\n    path = sep + path;\n  }\n\n  return host + path;\n}\n","module.exports = require(\"buffer\");","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n","\"use strict\";\n\n/**\n * Module dependencies.\n */\nvar tty = require('tty');\n\nvar util = require('util');\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  var supportsColor = require('supports-color');\n\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];\n  }\n} catch (error) {} // Swallow - we only care if `supports-color` is available; it doesn't have to be.\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // Camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  }); // Coerce string value into JS value\n\n  var val = process.env[key];\n\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true;\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false;\n  } else if (val === 'null') {\n    val = null;\n  } else {\n    val = Number(val);\n  }\n\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\n}\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var name = this.namespace,\n      useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = \"\\x1B[3\" + (c < 8 ? c : '8;5;' + c);\n    var prefix = \"  \".concat(colorCode, \";1m\").concat(name, \" \\x1B[0m\");\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + \"\\x1B[0m\");\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  }\n\n  return new Date().toISOString() + ' ';\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env.DEBUG = namespaces;\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts).replace(/\\s*\\n\\s*/g, ' ');\n};\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\n\nformatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n","\"use strict\";\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n\n","\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return (typeof console === \"undefined\" ? \"undefined\" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};\n\n","\"use strict\";\n\n/**\n * Module dependencies.\n */\nvar tty = require('tty');\n\nvar util = require('util');\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n  // eslint-disable-next-line import/no-extraneous-dependencies\n  var supportsColor = require('supports-color');\n\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n    exports.colors = [20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221];\n  }\n} catch (error) {} // Swallow - we only care if `supports-color` is available; it doesn't have to be.\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // Camel-case\n  var prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, function (_, k) {\n    return k.toUpperCase();\n  }); // Coerce string value into JS value\n\n  var val = process.env[key];\n\n  if (/^(yes|on|true|enabled)$/i.test(val)) {\n    val = true;\n  } else if (/^(no|off|false|disabled)$/i.test(val)) {\n    val = false;\n  } else if (val === 'null') {\n    val = null;\n  } else {\n    val = Number(val);\n  }\n\n  obj[prop] = val;\n  return obj;\n}, {});\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);\n}\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var name = this.namespace,\n      useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = \"\\x1B[3\" + (c < 8 ? c : '8;5;' + c);\n    var prefix = \"  \".concat(colorCode, \";1m\").concat(name, \" \\x1B[0m\");\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + \"\\x1B[0m\");\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  }\n\n  return new Date().toISOString() + ' ';\n}\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env.DEBUG = namespaces;\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  return process.env.DEBUG;\n}\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\n\nfunction init(debug) {\n  debug.inspectOpts = {};\n  var keys = Object.keys(exports.inspectOpts);\n\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts).replace(/\\s*\\n\\s*/g, ' ');\n};\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\n\nformatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n","'use strict';\n/**\n * Module dependencies.\n */\n\nconst ref = require('ref-napi');\nconst assert = require('assert');\nconst bindings = require('./bindings');\nconst Callback = require('./callback');\nconst ForeignFunction = require('./foreign_function');\nconst debug = require('debug')('ffi:FunctionType');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Function;\n\n/**\n * Creates and returns a \"type\" object for a C \"function pointer\".\n *\n * @api public\n */\n\nfunction Function (retType, argTypes, abi) {\n  if (!(this instanceof Function)) {\n    return new Function(retType, argTypes, abi);\n  }\n\n  debug('creating new FunctionType');\n\n  // check args\n  assert(!!retType, 'expected a return \"type\" object as the first argument');\n  assert(Array.isArray(argTypes), 'expected Array of arg \"type\" objects as the second argument');\n\n  // normalize the \"types\" (they could be strings, so turn into real type\n  // instances)\n  this.retType = ref.coerceType(retType);\n  this.argTypes = argTypes.map(ref.coerceType);\n  this.abi = null == abi ? bindings.FFI_DEFAULT_ABI : abi;\n}\n\n/**\n * The \"ffi_type\" is set for node-ffi functions.\n */\n\nFunction.prototype.ffi_type = bindings.FFI_TYPES.pointer;\n\n/**\n * The \"size\" is always pointer-sized.\n */\n\nFunction.prototype.size = ref.sizeof.pointer;\n\n/**\n * The \"alignment\" is always pointer-aligned.\n */\n\nFunction.prototype.alignment = ref.alignof.pointer;\n\n/**\n * The \"indirection\" is always 1 to ensure that our get()/set() get called.\n */\n\nFunction.prototype.indirection = 1;\n\n/**\n * Returns a ffi.Callback pointer (Buffer) of this function type for the\n * given `fn` Function.\n */\n\nFunction.prototype.toPointer = function toPointer (fn) {\n  return Callback(this.retType, this.argTypes, this.abi, fn);\n};\n\n/**\n * Returns a ffi.ForeignFunction (Function) of this function type for the\n * given `buf` Buffer.\n */\n\nFunction.prototype.toFunction = function toFunction (buf) {\n  return ForeignFunction(buf, this.retType, this.argTypes, this.abi);\n};\n\n/**\n * get function; return a ForeignFunction instance.\n */\n\nFunction.prototype.get = function get (buffer, offset) {\n  debug('ffi FunctionType \"get\" function');\n  const ptr = buffer.readPointer(offset);\n  return this.toFunction(ptr);\n};\n\n/**\n * set function; return a Callback buffer.\n */\n\nFunction.prototype.set = function set (buffer, offset, value) {\n  debug('ffi FunctionType \"set\" function');\n  let ptr;\n  if ('function' == typeof value) {\n    ptr = this.toPointer(value);\n  } else if (Buffer.isBuffer(value)) {\n    ptr = value;\n  } else {\n    throw new Error('don\\'t know how to set callback function for: ' + value);\n  }\n  buffer.writePointer(ptr, offset);\n};\n","'use strict';\n/**\n * Module dependencies.\n */\n\nconst DynamicLibrary = require('./dynamic_library');\nconst ForeignFunction = require('./foreign_function');\nconst VariadicForeignFunction = require('./foreign_function_var');\nconst debug = require('debug')('ffi:Library');\nconst RTLD_NOW = DynamicLibrary.FLAGS.RTLD_NOW;\n\n/**\n * The extension to use on libraries.\n * i.e.  libm  ->  libm.so   on linux\n */\n\nconst EXT = Library.EXT = {\n  'linux':  '.so',\n  'linux2': '.so',\n  'sunos':  '.so',\n  'solaris':'.so',\n  'freebsd':'.so',\n  'openbsd':'.so',\n  'darwin': '.dylib',\n  'mac':    '.dylib',\n  'win32':  '.dll'\n}[process.platform];\n\n/**\n * Provides a friendly abstraction/API on-top of DynamicLibrary and\n * ForeignFunction.\n */\n\nfunction Library (libfile, funcs, lib) {\n  debug('creating Library object for', libfile);\n\n  if (libfile && libfile.indexOf(EXT) === -1) {\n    debug('appending library extension to library name', EXT);\n    libfile += EXT;\n  }\n\n  if (!lib) {\n    lib = {};\n  }\n  const dl = new DynamicLibrary(libfile || null, RTLD_NOW);\n\n  Object.keys(funcs || {}).forEach(function (func) {\n    debug('defining function', func);\n\n    const fptr = dl.get(func);\n    const info = funcs[func];\n\n    if (fptr.isNull()) {\n      throw new Error('Library: \"' + libfile\n        + '\" returned NULL function pointer for \"' + func + '\"');\n    }\n\n    const resultType = info[0];\n    const paramTypes = info[1];\n    const fopts = info[2];\n    const abi = fopts && fopts.abi;\n    const async = fopts && fopts.async;\n    const varargs = fopts && fopts.varargs;\n\n    if (varargs) {\n      lib[func] = VariadicForeignFunction(fptr, resultType, paramTypes, abi);\n    } else {\n      const ff = ForeignFunction(fptr, resultType, paramTypes, abi);\n      lib[func] = async ? ff.async : ff;\n    }\n  });\n\n  return lib;\n}\n\nmodule.exports = Library;\n","'use strict';\nconst DynamicLibrary = require('./dynamic_library');\nconst ForeignFunction = require('./foreign_function');\nconst bindings = require('./bindings');\nconst funcs = bindings.StaticFunctions;\nconst ref = require('ref-napi');\nconst int = ref.types.int;\nconst intPtr = ref.refType(int);\nlet errno = null;\n\nif (process.platform == 'win32') {\n  const _errno = DynamicLibrary('msvcrt.dll').get('_errno');\n  const errnoPtr = ForeignFunction(_errno, intPtr, []);\n  errno = function() {\n    return errnoPtr().deref();\n  };\n} else {\n  errno = ForeignFunction(funcs._errno, 'int', []);\n}\n\nmodule.exports = errno;\n"],"sourceRoot":""}